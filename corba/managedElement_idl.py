# Python stubs generated by omniidl from managedElement.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "globaldefs.idl"
import globaldefs_idl
_0_globaldefs = omniORB.openModule("globaldefs")
_0_globaldefs__POA = omniORB.openModule("globaldefs__POA")
# #include "transmissionParameters.idl"
import transmissionParameters_idl
_0_transmissionParameters = omniORB.openModule("transmissionParameters")
_0_transmissionParameters__POA = omniORB.openModule("transmissionParameters__POA")

#
# Start of module "managedElement"
#
__name__ = "managedElement"
_0_managedElement = omniORB.openModule("managedElement", r"managedElement.idl")
_0_managedElement__POA = omniORB.openModule("managedElement__POA", r"managedElement.idl")


# enum CommunicationState_T
_0_managedElement.CS_AVAILABLE = omniORB.EnumItem("CS_AVAILABLE", 0)
_0_managedElement.CS_UNAVAILABLE = omniORB.EnumItem("CS_UNAVAILABLE", 1)
_0_managedElement.CommunicationState_T = omniORB.Enum("IDL:mtnm.tmforum.org/managedElement/CommunicationState_T:1.0", (_0_managedElement.CS_AVAILABLE, _0_managedElement.CS_UNAVAILABLE,))

_0_managedElement._d_CommunicationState_T  = (omniORB.tcInternal.tv_enum, _0_managedElement.CommunicationState_T._NP_RepositoryId, "CommunicationState_T", _0_managedElement.CommunicationState_T._items)
_0_managedElement._tc_CommunicationState_T = omniORB.tcInternal.createTypeCode(_0_managedElement._d_CommunicationState_T)
omniORB.registerType(_0_managedElement.CommunicationState_T._NP_RepositoryId, _0_managedElement._d_CommunicationState_T, _0_managedElement._tc_CommunicationState_T)

# struct ManagedElement_T
_0_managedElement.ManagedElement_T = omniORB.newEmptyClass()
class ManagedElement_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/managedElement/ManagedElement_T:1.0"

    def __init__(self, name, userLabel, nativeEMSName, owner, location, version, productName, communicationState, emsInSyncState, supportedRates, additionalInfo):
        self.name = name
        self.userLabel = userLabel
        self.nativeEMSName = nativeEMSName
        self.owner = owner
        self.location = location
        self.version = version
        self.productName = productName
        self.communicationState = communicationState
        self.emsInSyncState = emsInSyncState
        self.supportedRates = supportedRates
        self.additionalInfo = additionalInfo

_0_managedElement.ManagedElement_T = ManagedElement_T
_0_managedElement._d_ManagedElement_T  = (omniORB.tcInternal.tv_struct, ManagedElement_T, ManagedElement_T._NP_RepositoryId, "ManagedElement_T", "name", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], "userLabel", (omniORB.tcInternal.tv_string,0), "nativeEMSName", (omniORB.tcInternal.tv_string,0), "owner", (omniORB.tcInternal.tv_string,0), "location", (omniORB.tcInternal.tv_string,0), "version", (omniORB.tcInternal.tv_string,0), "productName", (omniORB.tcInternal.tv_string,0), "communicationState", omniORB.typeMapping["IDL:mtnm.tmforum.org/managedElement/CommunicationState_T:1.0"], "emsInSyncState", omniORB.tcInternal.tv_boolean, "supportedRates", omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], "additionalInfo", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"])
_0_managedElement._tc_ManagedElement_T = omniORB.tcInternal.createTypeCode(_0_managedElement._d_ManagedElement_T)
omniORB.registerType(ManagedElement_T._NP_RepositoryId, _0_managedElement._d_ManagedElement_T, _0_managedElement._tc_ManagedElement_T)
del ManagedElement_T

# typedef ... ManagedElementList_T
class ManagedElementList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/managedElement/ManagedElementList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_managedElement.ManagedElementList_T = ManagedElementList_T
_0_managedElement._d_ManagedElementList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/managedElement/ManagedElement_T:1.0"], 0)
_0_managedElement._ad_ManagedElementList_T = (omniORB.tcInternal.tv_alias, ManagedElementList_T._NP_RepositoryId, "ManagedElementList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/managedElement/ManagedElement_T:1.0"], 0))
_0_managedElement._tc_ManagedElementList_T = omniORB.tcInternal.createTypeCode(_0_managedElement._ad_ManagedElementList_T)
omniORB.registerType(ManagedElementList_T._NP_RepositoryId, _0_managedElement._ad_ManagedElementList_T, _0_managedElement._tc_ManagedElementList_T)
del ManagedElementList_T

# interface ManagedElementIterator_I
_0_managedElement._d_ManagedElementIterator_I = (omniORB.tcInternal.tv_objref, "IDL:mtnm.tmforum.org/managedElement/ManagedElementIterator_I:1.0", "ManagedElementIterator_I")
omniORB.typeMapping["IDL:mtnm.tmforum.org/managedElement/ManagedElementIterator_I:1.0"] = _0_managedElement._d_ManagedElementIterator_I
_0_managedElement.ManagedElementIterator_I = omniORB.newEmptyClass()
class ManagedElementIterator_I :
    _NP_RepositoryId = _0_managedElement._d_ManagedElementIterator_I[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_managedElement.ManagedElementIterator_I = ManagedElementIterator_I
_0_managedElement._tc_ManagedElementIterator_I = omniORB.tcInternal.createTypeCode(_0_managedElement._d_ManagedElementIterator_I)
omniORB.registerType(ManagedElementIterator_I._NP_RepositoryId, _0_managedElement._d_ManagedElementIterator_I, _0_managedElement._tc_ManagedElementIterator_I)

# ManagedElementIterator_I operations and attributes
ManagedElementIterator_I._d_next_n = ((omniORB.tcInternal.tv_ulong, ), (omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:mtnm.tmforum.org/managedElement/ManagedElementList_T:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementIterator_I._d_getLength = ((), (omniORB.tcInternal.tv_ulong, ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementIterator_I._d_destroy = ((), (), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})

# ManagedElementIterator_I object reference
class _objref_ManagedElementIterator_I (CORBA.Object):
    _NP_RepositoryId = ManagedElementIterator_I._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def next_n(self, *args):
        return _omnipy.invoke(self, "next_n", _0_managedElement.ManagedElementIterator_I._d_next_n, args)

    def getLength(self, *args):
        return _omnipy.invoke(self, "getLength", _0_managedElement.ManagedElementIterator_I._d_getLength, args)

    def destroy(self, *args):
        return _omnipy.invoke(self, "destroy", _0_managedElement.ManagedElementIterator_I._d_destroy, args)

    __methods__ = ["next_n", "getLength", "destroy"] + CORBA.Object.__methods__

omniORB.registerObjref(ManagedElementIterator_I._NP_RepositoryId, _objref_ManagedElementIterator_I)
_0_managedElement._objref_ManagedElementIterator_I = _objref_ManagedElementIterator_I
del ManagedElementIterator_I, _objref_ManagedElementIterator_I

# ManagedElementIterator_I skeleton
__name__ = "managedElement__POA"
class ManagedElementIterator_I (PortableServer.Servant):
    _NP_RepositoryId = _0_managedElement.ManagedElementIterator_I._NP_RepositoryId


    _omni_op_d = {"next_n": _0_managedElement.ManagedElementIterator_I._d_next_n, "getLength": _0_managedElement.ManagedElementIterator_I._d_getLength, "destroy": _0_managedElement.ManagedElementIterator_I._d_destroy}

ManagedElementIterator_I._omni_skeleton = ManagedElementIterator_I
_0_managedElement__POA.ManagedElementIterator_I = ManagedElementIterator_I
omniORB.registerSkeleton(ManagedElementIterator_I._NP_RepositoryId, ManagedElementIterator_I)
del ManagedElementIterator_I
__name__ = "managedElement"

#
# End of module "managedElement"
#
__name__ = "managedElement_idl"

_exported_modules = ( "managedElement", )

# The end.
