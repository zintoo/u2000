# Python stubs generated by omniidl from subnetworkConnection.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "globaldefs.idl"
import globaldefs_idl
_0_globaldefs = omniORB.openModule("globaldefs")
_0_globaldefs__POA = omniORB.openModule("globaldefs__POA")
# #include "transmissionParameters.idl"
import transmissionParameters_idl
_0_transmissionParameters = omniORB.openModule("transmissionParameters")
_0_transmissionParameters__POA = omniORB.openModule("transmissionParameters__POA")
# #include "terminationPoint.idl"
import terminationPoint_idl
_0_terminationPoint = omniORB.openModule("terminationPoint")
_0_terminationPoint__POA = omniORB.openModule("terminationPoint__POA")

#
# Start of module "subnetworkConnection"
#
__name__ = "subnetworkConnection"
_0_subnetworkConnection = omniORB.openModule("subnetworkConnection", r"subnetworkConnection.idl")
_0_subnetworkConnection__POA = omniORB.openModule("subnetworkConnection__POA", r"subnetworkConnection.idl")


# enum StaticProtectionLevel_T
_0_subnetworkConnection.PREEMPTIBLE = omniORB.EnumItem("PREEMPTIBLE", 0)
_0_subnetworkConnection.UNPROTECTED = omniORB.EnumItem("UNPROTECTED", 1)
_0_subnetworkConnection.PARTIALLY_PROTECTED = omniORB.EnumItem("PARTIALLY_PROTECTED", 2)
_0_subnetworkConnection.FULLY_PROTECTED = omniORB.EnumItem("FULLY_PROTECTED", 3)
_0_subnetworkConnection.HIGHLY_PROTECTED = omniORB.EnumItem("HIGHLY_PROTECTED", 4)
_0_subnetworkConnection.StaticProtectionLevel_T = omniORB.Enum("IDL:mtnm.tmforum.org/subnetworkConnection/StaticProtectionLevel_T:1.0", (_0_subnetworkConnection.PREEMPTIBLE, _0_subnetworkConnection.UNPROTECTED, _0_subnetworkConnection.PARTIALLY_PROTECTED, _0_subnetworkConnection.FULLY_PROTECTED, _0_subnetworkConnection.HIGHLY_PROTECTED,))

_0_subnetworkConnection._d_StaticProtectionLevel_T  = (omniORB.tcInternal.tv_enum, _0_subnetworkConnection.StaticProtectionLevel_T._NP_RepositoryId, "StaticProtectionLevel_T", _0_subnetworkConnection.StaticProtectionLevel_T._items)
_0_subnetworkConnection._tc_StaticProtectionLevel_T = omniORB.tcInternal.createTypeCode(_0_subnetworkConnection._d_StaticProtectionLevel_T)
omniORB.registerType(_0_subnetworkConnection.StaticProtectionLevel_T._NP_RepositoryId, _0_subnetworkConnection._d_StaticProtectionLevel_T, _0_subnetworkConnection._tc_StaticProtectionLevel_T)

# enum ProtectionEffort_T
_0_subnetworkConnection.EFFORT_WHATEVER = omniORB.EnumItem("EFFORT_WHATEVER", 0)
_0_subnetworkConnection.EFFORT_SAME_OR_BETTER = omniORB.EnumItem("EFFORT_SAME_OR_BETTER", 1)
_0_subnetworkConnection.EFFORT_SAME_OR_WORSE = omniORB.EnumItem("EFFORT_SAME_OR_WORSE", 2)
_0_subnetworkConnection.EFFORT_SAME = omniORB.EnumItem("EFFORT_SAME", 3)
_0_subnetworkConnection.ProtectionEffort_T = omniORB.Enum("IDL:mtnm.tmforum.org/subnetworkConnection/ProtectionEffort_T:1.0", (_0_subnetworkConnection.EFFORT_WHATEVER, _0_subnetworkConnection.EFFORT_SAME_OR_BETTER, _0_subnetworkConnection.EFFORT_SAME_OR_WORSE, _0_subnetworkConnection.EFFORT_SAME,))

_0_subnetworkConnection._d_ProtectionEffort_T  = (omniORB.tcInternal.tv_enum, _0_subnetworkConnection.ProtectionEffort_T._NP_RepositoryId, "ProtectionEffort_T", _0_subnetworkConnection.ProtectionEffort_T._items)
_0_subnetworkConnection._tc_ProtectionEffort_T = omniORB.tcInternal.createTypeCode(_0_subnetworkConnection._d_ProtectionEffort_T)
omniORB.registerType(_0_subnetworkConnection.ProtectionEffort_T._NP_RepositoryId, _0_subnetworkConnection._d_ProtectionEffort_T, _0_subnetworkConnection._tc_ProtectionEffort_T)

# enum SNCState_T
_0_subnetworkConnection.SNCS_NONEXISTENT = omniORB.EnumItem("SNCS_NONEXISTENT", 0)
_0_subnetworkConnection.SNCS_PENDING = omniORB.EnumItem("SNCS_PENDING", 1)
_0_subnetworkConnection.SNCS_ACTIVE = omniORB.EnumItem("SNCS_ACTIVE", 2)
_0_subnetworkConnection.SNCS_PARTIAL = omniORB.EnumItem("SNCS_PARTIAL", 3)
_0_subnetworkConnection.SNCState_T = omniORB.Enum("IDL:mtnm.tmforum.org/subnetworkConnection/SNCState_T:1.0", (_0_subnetworkConnection.SNCS_NONEXISTENT, _0_subnetworkConnection.SNCS_PENDING, _0_subnetworkConnection.SNCS_ACTIVE, _0_subnetworkConnection.SNCS_PARTIAL,))

_0_subnetworkConnection._d_SNCState_T  = (omniORB.tcInternal.tv_enum, _0_subnetworkConnection.SNCState_T._NP_RepositoryId, "SNCState_T", _0_subnetworkConnection.SNCState_T._items)
_0_subnetworkConnection._tc_SNCState_T = omniORB.tcInternal.createTypeCode(_0_subnetworkConnection._d_SNCState_T)
omniORB.registerType(_0_subnetworkConnection.SNCState_T._NP_RepositoryId, _0_subnetworkConnection._d_SNCState_T, _0_subnetworkConnection._tc_SNCState_T)

# enum GradesOfImpact_T
_0_subnetworkConnection.GOI_HITLESS = omniORB.EnumItem("GOI_HITLESS", 0)
_0_subnetworkConnection.GOI_MINOR_IMPACT = omniORB.EnumItem("GOI_MINOR_IMPACT", 1)
_0_subnetworkConnection.GOI_MAJOR_IMPACT = omniORB.EnumItem("GOI_MAJOR_IMPACT", 2)
_0_subnetworkConnection.GradesOfImpact_T = omniORB.Enum("IDL:mtnm.tmforum.org/subnetworkConnection/GradesOfImpact_T:1.0", (_0_subnetworkConnection.GOI_HITLESS, _0_subnetworkConnection.GOI_MINOR_IMPACT, _0_subnetworkConnection.GOI_MAJOR_IMPACT,))

_0_subnetworkConnection._d_GradesOfImpact_T  = (omniORB.tcInternal.tv_enum, _0_subnetworkConnection.GradesOfImpact_T._NP_RepositoryId, "GradesOfImpact_T", _0_subnetworkConnection.GradesOfImpact_T._items)
_0_subnetworkConnection._tc_GradesOfImpact_T = omniORB.tcInternal.createTypeCode(_0_subnetworkConnection._d_GradesOfImpact_T)
omniORB.registerType(_0_subnetworkConnection.GradesOfImpact_T._NP_RepositoryId, _0_subnetworkConnection._d_GradesOfImpact_T, _0_subnetworkConnection._tc_GradesOfImpact_T)

# struct TPData_T
_0_subnetworkConnection.TPData_T = omniORB.newEmptyClass()
class TPData_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/subnetworkConnection/TPData_T:1.0"

    def __init__(self, tpName, tpMappingMode, transmissionParams, ingressTrafficDescriptorName, egressTrafficDescriptorName):
        self.tpName = tpName
        self.tpMappingMode = tpMappingMode
        self.transmissionParams = transmissionParams
        self.ingressTrafficDescriptorName = ingressTrafficDescriptorName
        self.egressTrafficDescriptorName = egressTrafficDescriptorName

_0_subnetworkConnection.TPData_T = TPData_T
_0_subnetworkConnection._d_TPData_T  = (omniORB.tcInternal.tv_struct, TPData_T, TPData_T._NP_RepositoryId, "TPData_T", "tpName", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], "tpMappingMode", omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationMode_T:1.0"], "transmissionParams", omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayeredParameterList_T:1.0"], "ingressTrafficDescriptorName", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], "egressTrafficDescriptorName", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"])
_0_subnetworkConnection._tc_TPData_T = omniORB.tcInternal.createTypeCode(_0_subnetworkConnection._d_TPData_T)
omniORB.registerType(TPData_T._NP_RepositoryId, _0_subnetworkConnection._d_TPData_T, _0_subnetworkConnection._tc_TPData_T)
del TPData_T

# typedef ... TPDataList_T
class TPDataList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_subnetworkConnection.TPDataList_T = TPDataList_T
_0_subnetworkConnection._d_TPDataList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPData_T:1.0"], 0)
_0_subnetworkConnection._ad_TPDataList_T = (omniORB.tcInternal.tv_alias, TPDataList_T._NP_RepositoryId, "TPDataList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPData_T:1.0"], 0))
_0_subnetworkConnection._tc_TPDataList_T = omniORB.tcInternal.createTypeCode(_0_subnetworkConnection._ad_TPDataList_T)
omniORB.registerType(TPDataList_T._NP_RepositoryId, _0_subnetworkConnection._ad_TPDataList_T, _0_subnetworkConnection._tc_TPDataList_T)
del TPDataList_T

# enum SNCType_T
_0_subnetworkConnection.ST_SIMPLE = omniORB.EnumItem("ST_SIMPLE", 0)
_0_subnetworkConnection.ST_ADD_DROP_A = omniORB.EnumItem("ST_ADD_DROP_A", 1)
_0_subnetworkConnection.ST_ADD_DROP_Z = omniORB.EnumItem("ST_ADD_DROP_Z", 2)
_0_subnetworkConnection.ST_INTERCONNECT = omniORB.EnumItem("ST_INTERCONNECT", 3)
_0_subnetworkConnection.ST_DOUBLE_INTERCONNECT = omniORB.EnumItem("ST_DOUBLE_INTERCONNECT", 4)
_0_subnetworkConnection.ST_DOUBLE_ADD_DROP = omniORB.EnumItem("ST_DOUBLE_ADD_DROP", 5)
_0_subnetworkConnection.ST_OPEN_ADD_DROP = omniORB.EnumItem("ST_OPEN_ADD_DROP", 6)
_0_subnetworkConnection.ST_EXPLICIT = omniORB.EnumItem("ST_EXPLICIT", 7)
_0_subnetworkConnection.SNCType_T = omniORB.Enum("IDL:mtnm.tmforum.org/subnetworkConnection/SNCType_T:1.0", (_0_subnetworkConnection.ST_SIMPLE, _0_subnetworkConnection.ST_ADD_DROP_A, _0_subnetworkConnection.ST_ADD_DROP_Z, _0_subnetworkConnection.ST_INTERCONNECT, _0_subnetworkConnection.ST_DOUBLE_INTERCONNECT, _0_subnetworkConnection.ST_DOUBLE_ADD_DROP, _0_subnetworkConnection.ST_OPEN_ADD_DROP, _0_subnetworkConnection.ST_EXPLICIT,))

_0_subnetworkConnection._d_SNCType_T  = (omniORB.tcInternal.tv_enum, _0_subnetworkConnection.SNCType_T._NP_RepositoryId, "SNCType_T", _0_subnetworkConnection.SNCType_T._items)
_0_subnetworkConnection._tc_SNCType_T = omniORB.tcInternal.createTypeCode(_0_subnetworkConnection._d_SNCType_T)
omniORB.registerType(_0_subnetworkConnection.SNCType_T._NP_RepositoryId, _0_subnetworkConnection._d_SNCType_T, _0_subnetworkConnection._tc_SNCType_T)

# enum Reroute_T
_0_subnetworkConnection.RR_NA = omniORB.EnumItem("RR_NA", 0)
_0_subnetworkConnection.RR_NO = omniORB.EnumItem("RR_NO", 1)
_0_subnetworkConnection.RR_YES = omniORB.EnumItem("RR_YES", 2)
_0_subnetworkConnection.Reroute_T = omniORB.Enum("IDL:mtnm.tmforum.org/subnetworkConnection/Reroute_T:1.0", (_0_subnetworkConnection.RR_NA, _0_subnetworkConnection.RR_NO, _0_subnetworkConnection.RR_YES,))

_0_subnetworkConnection._d_Reroute_T  = (omniORB.tcInternal.tv_enum, _0_subnetworkConnection.Reroute_T._NP_RepositoryId, "Reroute_T", _0_subnetworkConnection.Reroute_T._items)
_0_subnetworkConnection._tc_Reroute_T = omniORB.tcInternal.createTypeCode(_0_subnetworkConnection._d_Reroute_T)
omniORB.registerType(_0_subnetworkConnection.Reroute_T._NP_RepositoryId, _0_subnetworkConnection._d_Reroute_T, _0_subnetworkConnection._tc_Reroute_T)

# enum NetworkRouted_T
_0_subnetworkConnection.NR_NA = omniORB.EnumItem("NR_NA", 0)
_0_subnetworkConnection.NR_NO = omniORB.EnumItem("NR_NO", 1)
_0_subnetworkConnection.NR_YES = omniORB.EnumItem("NR_YES", 2)
_0_subnetworkConnection.NetworkRouted_T = omniORB.Enum("IDL:mtnm.tmforum.org/subnetworkConnection/NetworkRouted_T:1.0", (_0_subnetworkConnection.NR_NA, _0_subnetworkConnection.NR_NO, _0_subnetworkConnection.NR_YES,))

_0_subnetworkConnection._d_NetworkRouted_T  = (omniORB.tcInternal.tv_enum, _0_subnetworkConnection.NetworkRouted_T._NP_RepositoryId, "NetworkRouted_T", _0_subnetworkConnection.NetworkRouted_T._items)
_0_subnetworkConnection._tc_NetworkRouted_T = omniORB.tcInternal.createTypeCode(_0_subnetworkConnection._d_NetworkRouted_T)
omniORB.registerType(_0_subnetworkConnection.NetworkRouted_T._NP_RepositoryId, _0_subnetworkConnection._d_NetworkRouted_T, _0_subnetworkConnection._tc_NetworkRouted_T)

# typedef ... RerouteChangeEvent_T
class RerouteChangeEvent_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/subnetworkConnection/RerouteChangeEvent_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_subnetworkConnection.RerouteChangeEvent_T = RerouteChangeEvent_T
_0_subnetworkConnection._d_RerouteChangeEvent_T  = (omniORB.tcInternal.tv_string,0)
_0_subnetworkConnection._ad_RerouteChangeEvent_T = (omniORB.tcInternal.tv_alias, RerouteChangeEvent_T._NP_RepositoryId, "RerouteChangeEvent_T", (omniORB.tcInternal.tv_string,0))
_0_subnetworkConnection._tc_RerouteChangeEvent_T = omniORB.tcInternal.createTypeCode(_0_subnetworkConnection._ad_RerouteChangeEvent_T)
omniORB.registerType(RerouteChangeEvent_T._NP_RepositoryId, _0_subnetworkConnection._ad_RerouteChangeEvent_T, _0_subnetworkConnection._tc_RerouteChangeEvent_T)
del RerouteChangeEvent_T

# struct SubnetworkConnection_T
_0_subnetworkConnection.SubnetworkConnection_T = omniORB.newEmptyClass()
class SubnetworkConnection_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnection_T:1.0"

    def __init__(self, name, userLabel, nativeEMSName, owner, sncState, direction, rate, staticProtectionLevel, sncType, aEnd, zEnd, rerouteAllowed, networkRouted, additionalInfo):
        self.name = name
        self.userLabel = userLabel
        self.nativeEMSName = nativeEMSName
        self.owner = owner
        self.sncState = sncState
        self.direction = direction
        self.rate = rate
        self.staticProtectionLevel = staticProtectionLevel
        self.sncType = sncType
        self.aEnd = aEnd
        self.zEnd = zEnd
        self.rerouteAllowed = rerouteAllowed
        self.networkRouted = networkRouted
        self.additionalInfo = additionalInfo

_0_subnetworkConnection.SubnetworkConnection_T = SubnetworkConnection_T
_0_subnetworkConnection._d_SubnetworkConnection_T  = (omniORB.tcInternal.tv_struct, SubnetworkConnection_T, SubnetworkConnection_T._NP_RepositoryId, "SubnetworkConnection_T", "name", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], "userLabel", (omniORB.tcInternal.tv_string,0), "nativeEMSName", (omniORB.tcInternal.tv_string,0), "owner", (omniORB.tcInternal.tv_string,0), "sncState", omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SNCState_T:1.0"], "direction", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/ConnectionDirection_T:1.0"], "rate", omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRate_T:1.0"], "staticProtectionLevel", omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/StaticProtectionLevel_T:1.0"], "sncType", omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SNCType_T:1.0"], "aEnd", omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], "zEnd", omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], "rerouteAllowed", omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/Reroute_T:1.0"], "networkRouted", omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/NetworkRouted_T:1.0"], "additionalInfo", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"])
_0_subnetworkConnection._tc_SubnetworkConnection_T = omniORB.tcInternal.createTypeCode(_0_subnetworkConnection._d_SubnetworkConnection_T)
omniORB.registerType(SubnetworkConnection_T._NP_RepositoryId, _0_subnetworkConnection._d_SubnetworkConnection_T, _0_subnetworkConnection._tc_SubnetworkConnection_T)
del SubnetworkConnection_T

# typedef ... SubnetworkConnectionList_T
class SubnetworkConnectionList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnectionList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_subnetworkConnection.SubnetworkConnectionList_T = SubnetworkConnectionList_T
_0_subnetworkConnection._d_SubnetworkConnectionList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnection_T:1.0"], 0)
_0_subnetworkConnection._ad_SubnetworkConnectionList_T = (omniORB.tcInternal.tv_alias, SubnetworkConnectionList_T._NP_RepositoryId, "SubnetworkConnectionList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnection_T:1.0"], 0))
_0_subnetworkConnection._tc_SubnetworkConnectionList_T = omniORB.tcInternal.createTypeCode(_0_subnetworkConnection._ad_SubnetworkConnectionList_T)
omniORB.registerType(SubnetworkConnectionList_T._NP_RepositoryId, _0_subnetworkConnection._ad_SubnetworkConnectionList_T, _0_subnetworkConnection._tc_SubnetworkConnectionList_T)
del SubnetworkConnectionList_T

# struct CrossConnect_T
_0_subnetworkConnection.CrossConnect_T = omniORB.newEmptyClass()
class CrossConnect_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/subnetworkConnection/CrossConnect_T:1.0"

    def __init__(self, active, direction, ccType, aEndNameList, zEndNameList, additionalInfo):
        self.active = active
        self.direction = direction
        self.ccType = ccType
        self.aEndNameList = aEndNameList
        self.zEndNameList = zEndNameList
        self.additionalInfo = additionalInfo

_0_subnetworkConnection.CrossConnect_T = CrossConnect_T
_0_subnetworkConnection._d_CrossConnect_T  = (omniORB.tcInternal.tv_struct, CrossConnect_T, CrossConnect_T._NP_RepositoryId, "CrossConnect_T", "active", omniORB.tcInternal.tv_boolean, "direction", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/ConnectionDirection_T:1.0"], "ccType", omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SNCType_T:1.0"], "aEndNameList", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], "zEndNameList", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], "additionalInfo", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"])
_0_subnetworkConnection._tc_CrossConnect_T = omniORB.tcInternal.createTypeCode(_0_subnetworkConnection._d_CrossConnect_T)
omniORB.registerType(CrossConnect_T._NP_RepositoryId, _0_subnetworkConnection._d_CrossConnect_T, _0_subnetworkConnection._tc_CrossConnect_T)
del CrossConnect_T

# typedef ... Route_T
class Route_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/subnetworkConnection/Route_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_subnetworkConnection.Route_T = Route_T
_0_subnetworkConnection._d_Route_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/CrossConnect_T:1.0"], 0)
_0_subnetworkConnection._ad_Route_T = (omniORB.tcInternal.tv_alias, Route_T._NP_RepositoryId, "Route_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/CrossConnect_T:1.0"], 0))
_0_subnetworkConnection._tc_Route_T = omniORB.tcInternal.createTypeCode(_0_subnetworkConnection._ad_Route_T)
omniORB.registerType(Route_T._NP_RepositoryId, _0_subnetworkConnection._ad_Route_T, _0_subnetworkConnection._tc_Route_T)
del Route_T

# struct RouteInfo_T
_0_subnetworkConnection.RouteInfo_T = omniORB.newEmptyClass()
class RouteInfo_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/subnetworkConnection/RouteInfo_T:1.0"

    def __init__(self, sncName, route):
        self.sncName = sncName
        self.route = route

_0_subnetworkConnection.RouteInfo_T = RouteInfo_T
_0_subnetworkConnection._d_RouteInfo_T  = (omniORB.tcInternal.tv_struct, RouteInfo_T, RouteInfo_T._NP_RepositoryId, "RouteInfo_T", "sncName", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], "route", omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/Route_T:1.0"])
_0_subnetworkConnection._tc_RouteInfo_T = omniORB.tcInternal.createTypeCode(_0_subnetworkConnection._d_RouteInfo_T)
omniORB.registerType(RouteInfo_T._NP_RepositoryId, _0_subnetworkConnection._d_RouteInfo_T, _0_subnetworkConnection._tc_RouteInfo_T)
del RouteInfo_T

# typedef ... RouteInfoList_T
class RouteInfoList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/subnetworkConnection/RouteInfoList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_subnetworkConnection.RouteInfoList_T = RouteInfoList_T
_0_subnetworkConnection._d_RouteInfoList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/RouteInfo_T:1.0"], 0)
_0_subnetworkConnection._ad_RouteInfoList_T = (omniORB.tcInternal.tv_alias, RouteInfoList_T._NP_RepositoryId, "RouteInfoList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/RouteInfo_T:1.0"], 0))
_0_subnetworkConnection._tc_RouteInfoList_T = omniORB.tcInternal.createTypeCode(_0_subnetworkConnection._ad_RouteInfoList_T)
omniORB.registerType(RouteInfoList_T._NP_RepositoryId, _0_subnetworkConnection._ad_RouteInfoList_T, _0_subnetworkConnection._tc_RouteInfoList_T)
del RouteInfoList_T

# typedef ... CrossConnectList_T
class CrossConnectList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/subnetworkConnection/CrossConnectList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_subnetworkConnection.CrossConnectList_T = CrossConnectList_T
_0_subnetworkConnection._d_CrossConnectList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/CrossConnect_T:1.0"], 0)
_0_subnetworkConnection._ad_CrossConnectList_T = (omniORB.tcInternal.tv_alias, CrossConnectList_T._NP_RepositoryId, "CrossConnectList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/CrossConnect_T:1.0"], 0))
_0_subnetworkConnection._tc_CrossConnectList_T = omniORB.tcInternal.createTypeCode(_0_subnetworkConnection._ad_CrossConnectList_T)
omniORB.registerType(CrossConnectList_T._NP_RepositoryId, _0_subnetworkConnection._ad_CrossConnectList_T, _0_subnetworkConnection._tc_CrossConnectList_T)
del CrossConnectList_T

# typedef ... Resource_T
class Resource_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/subnetworkConnection/Resource_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_subnetworkConnection.Resource_T = Resource_T
_0_subnetworkConnection._d_Resource_T  = omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"]
_0_subnetworkConnection._ad_Resource_T = (omniORB.tcInternal.tv_alias, Resource_T._NP_RepositoryId, "Resource_T", omniORB.typeCodeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"]._d)
_0_subnetworkConnection._tc_Resource_T = omniORB.tcInternal.createTypeCode(_0_subnetworkConnection._ad_Resource_T)
omniORB.registerType(Resource_T._NP_RepositoryId, _0_subnetworkConnection._ad_Resource_T, _0_subnetworkConnection._tc_Resource_T)
del Resource_T

# typedef ... ResourceList_T
class ResourceList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/subnetworkConnection/ResourceList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_subnetworkConnection.ResourceList_T = ResourceList_T
_0_subnetworkConnection._d_ResourceList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/Resource_T:1.0"], 0)
_0_subnetworkConnection._ad_ResourceList_T = (omniORB.tcInternal.tv_alias, ResourceList_T._NP_RepositoryId, "ResourceList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/Resource_T:1.0"], 0))
_0_subnetworkConnection._tc_ResourceList_T = omniORB.tcInternal.createTypeCode(_0_subnetworkConnection._ad_ResourceList_T)
omniORB.registerType(ResourceList_T._NP_RepositoryId, _0_subnetworkConnection._ad_ResourceList_T, _0_subnetworkConnection._tc_ResourceList_T)
del ResourceList_T

# interface CCIterator_I
_0_subnetworkConnection._d_CCIterator_I = (omniORB.tcInternal.tv_objref, "IDL:mtnm.tmforum.org/subnetworkConnection/CCIterator_I:1.0", "CCIterator_I")
omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/CCIterator_I:1.0"] = _0_subnetworkConnection._d_CCIterator_I
_0_subnetworkConnection.CCIterator_I = omniORB.newEmptyClass()
class CCIterator_I :
    _NP_RepositoryId = _0_subnetworkConnection._d_CCIterator_I[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_subnetworkConnection.CCIterator_I = CCIterator_I
_0_subnetworkConnection._tc_CCIterator_I = omniORB.tcInternal.createTypeCode(_0_subnetworkConnection._d_CCIterator_I)
omniORB.registerType(CCIterator_I._NP_RepositoryId, _0_subnetworkConnection._d_CCIterator_I, _0_subnetworkConnection._tc_CCIterator_I)

# CCIterator_I operations and attributes
CCIterator_I._d_next_n = ((omniORB.tcInternal.tv_ulong, ), (omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/CrossConnectList_T:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
CCIterator_I._d_getLength = ((), (omniORB.tcInternal.tv_ulong, ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
CCIterator_I._d_destroy = ((), (), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})

# CCIterator_I object reference
class _objref_CCIterator_I (CORBA.Object):
    _NP_RepositoryId = CCIterator_I._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def next_n(self, *args):
        return _omnipy.invoke(self, "next_n", _0_subnetworkConnection.CCIterator_I._d_next_n, args)

    def getLength(self, *args):
        return _omnipy.invoke(self, "getLength", _0_subnetworkConnection.CCIterator_I._d_getLength, args)

    def destroy(self, *args):
        return _omnipy.invoke(self, "destroy", _0_subnetworkConnection.CCIterator_I._d_destroy, args)

    __methods__ = ["next_n", "getLength", "destroy"] + CORBA.Object.__methods__

omniORB.registerObjref(CCIterator_I._NP_RepositoryId, _objref_CCIterator_I)
_0_subnetworkConnection._objref_CCIterator_I = _objref_CCIterator_I
del CCIterator_I, _objref_CCIterator_I

# CCIterator_I skeleton
__name__ = "subnetworkConnection__POA"
class CCIterator_I (PortableServer.Servant):
    _NP_RepositoryId = _0_subnetworkConnection.CCIterator_I._NP_RepositoryId


    _omni_op_d = {"next_n": _0_subnetworkConnection.CCIterator_I._d_next_n, "getLength": _0_subnetworkConnection.CCIterator_I._d_getLength, "destroy": _0_subnetworkConnection.CCIterator_I._d_destroy}

CCIterator_I._omni_skeleton = CCIterator_I
_0_subnetworkConnection__POA.CCIterator_I = CCIterator_I
omniORB.registerSkeleton(CCIterator_I._NP_RepositoryId, CCIterator_I)
del CCIterator_I
__name__ = "subnetworkConnection"

# struct SNCCreateData_T
_0_subnetworkConnection.SNCCreateData_T = omniORB.newEmptyClass()
class SNCCreateData_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/subnetworkConnection/SNCCreateData_T:1.0"

    def __init__(self, userLabel, forceUniqueness, owner, direction, staticProtectionLevel, protectionEffort, rerouteAllowed, networkRouted, sncType, layerRate, ccInclusions, neTpInclusions, fullRoute, neTpSncExclusions, aEnd, zEnd, additionalCreationInfo):
        self.userLabel = userLabel
        self.forceUniqueness = forceUniqueness
        self.owner = owner
        self.direction = direction
        self.staticProtectionLevel = staticProtectionLevel
        self.protectionEffort = protectionEffort
        self.rerouteAllowed = rerouteAllowed
        self.networkRouted = networkRouted
        self.sncType = sncType
        self.layerRate = layerRate
        self.ccInclusions = ccInclusions
        self.neTpInclusions = neTpInclusions
        self.fullRoute = fullRoute
        self.neTpSncExclusions = neTpSncExclusions
        self.aEnd = aEnd
        self.zEnd = zEnd
        self.additionalCreationInfo = additionalCreationInfo

_0_subnetworkConnection.SNCCreateData_T = SNCCreateData_T
_0_subnetworkConnection._d_SNCCreateData_T  = (omniORB.tcInternal.tv_struct, SNCCreateData_T, SNCCreateData_T._NP_RepositoryId, "SNCCreateData_T", "userLabel", (omniORB.tcInternal.tv_string,0), "forceUniqueness", omniORB.tcInternal.tv_boolean, "owner", (omniORB.tcInternal.tv_string,0), "direction", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/ConnectionDirection_T:1.0"], "staticProtectionLevel", omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/StaticProtectionLevel_T:1.0"], "protectionEffort", omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/ProtectionEffort_T:1.0"], "rerouteAllowed", omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/Reroute_T:1.0"], "networkRouted", omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/NetworkRouted_T:1.0"], "sncType", omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SNCType_T:1.0"], "layerRate", omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRate_T:1.0"], "ccInclusions", omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/CrossConnectList_T:1.0"], "neTpInclusions", omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/ResourceList_T:1.0"], "fullRoute", omniORB.tcInternal.tv_boolean, "neTpSncExclusions", omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/ResourceList_T:1.0"], "aEnd", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], "zEnd", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], "additionalCreationInfo", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"])
_0_subnetworkConnection._tc_SNCCreateData_T = omniORB.tcInternal.createTypeCode(_0_subnetworkConnection._d_SNCCreateData_T)
omniORB.registerType(SNCCreateData_T._NP_RepositoryId, _0_subnetworkConnection._d_SNCCreateData_T, _0_subnetworkConnection._tc_SNCCreateData_T)
del SNCCreateData_T

# typedef ... SNCCreateDataList_T
class SNCCreateDataList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/subnetworkConnection/SNCCreateDataList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_subnetworkConnection.SNCCreateDataList_T = SNCCreateDataList_T
_0_subnetworkConnection._d_SNCCreateDataList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SNCCreateData_T:1.0"], 0)
_0_subnetworkConnection._ad_SNCCreateDataList_T = (omniORB.tcInternal.tv_alias, SNCCreateDataList_T._NP_RepositoryId, "SNCCreateDataList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SNCCreateData_T:1.0"], 0))
_0_subnetworkConnection._tc_SNCCreateDataList_T = omniORB.tcInternal.createTypeCode(_0_subnetworkConnection._ad_SNCCreateDataList_T)
omniORB.registerType(SNCCreateDataList_T._NP_RepositoryId, _0_subnetworkConnection._ad_SNCCreateDataList_T, _0_subnetworkConnection._tc_SNCCreateDataList_T)
del SNCCreateDataList_T

# struct RouteDescriptor_T
_0_subnetworkConnection.RouteDescriptor_T = omniORB.newEmptyClass()
class RouteDescriptor_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/subnetworkConnection/RouteDescriptor_T:1.0"

    def __init__(self, id, intended, actualState, administrativeState, inUseBy, exclusive, routeXCs, additionalInfo):
        self.id = id
        self.intended = intended
        self.actualState = actualState
        self.administrativeState = administrativeState
        self.inUseBy = inUseBy
        self.exclusive = exclusive
        self.routeXCs = routeXCs
        self.additionalInfo = additionalInfo

_0_subnetworkConnection.RouteDescriptor_T = RouteDescriptor_T
_0_subnetworkConnection._d_RouteDescriptor_T  = (omniORB.tcInternal.tv_struct, RouteDescriptor_T, RouteDescriptor_T._NP_RepositoryId, "RouteDescriptor_T", "id", (omniORB.tcInternal.tv_string,0), "intended", (omniORB.tcInternal.tv_string,0), "actualState", (omniORB.tcInternal.tv_string,0), "administrativeState", (omniORB.tcInternal.tv_string,0), "inUseBy", (omniORB.tcInternal.tv_string,0), "exclusive", (omniORB.tcInternal.tv_string,0), "routeXCs", omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/Route_T:1.0"], "additionalInfo", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"])
_0_subnetworkConnection._tc_RouteDescriptor_T = omniORB.tcInternal.createTypeCode(_0_subnetworkConnection._d_RouteDescriptor_T)
omniORB.registerType(RouteDescriptor_T._NP_RepositoryId, _0_subnetworkConnection._d_RouteDescriptor_T, _0_subnetworkConnection._tc_RouteDescriptor_T)
del RouteDescriptor_T

# typedef ... RouteList_T
class RouteList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/subnetworkConnection/RouteList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_subnetworkConnection.RouteList_T = RouteList_T
_0_subnetworkConnection._d_RouteList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/RouteDescriptor_T:1.0"], 0)
_0_subnetworkConnection._ad_RouteList_T = (omniORB.tcInternal.tv_alias, RouteList_T._NP_RepositoryId, "RouteList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/RouteDescriptor_T:1.0"], 0))
_0_subnetworkConnection._tc_RouteList_T = omniORB.tcInternal.createTypeCode(_0_subnetworkConnection._ad_RouteList_T)
omniORB.registerType(RouteList_T._NP_RepositoryId, _0_subnetworkConnection._ad_RouteList_T, _0_subnetworkConnection._tc_RouteList_T)
del RouteList_T

# struct SNCModifyData_T
_0_subnetworkConnection.SNCModifyData_T = omniORB.newEmptyClass()
class SNCModifyData_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/subnetworkConnection/SNCModifyData_T:1.0"

    def __init__(self, userLabel, forceUniqueness, owner, direction, modifyType, retainOldSNC, modifyServers_allowed, staticProtectionLevel, protectionEffort, rerouteAllowed, networkRouted, sncType, layerRate, addedOrNewRoute, removedRoute, neTpInclusions, fullRoute, neTpSncExclusions, aEnd, zEnd, additionalCreationInfo):
        self.userLabel = userLabel
        self.forceUniqueness = forceUniqueness
        self.owner = owner
        self.direction = direction
        self.modifyType = modifyType
        self.retainOldSNC = retainOldSNC
        self.modifyServers_allowed = modifyServers_allowed
        self.staticProtectionLevel = staticProtectionLevel
        self.protectionEffort = protectionEffort
        self.rerouteAllowed = rerouteAllowed
        self.networkRouted = networkRouted
        self.sncType = sncType
        self.layerRate = layerRate
        self.addedOrNewRoute = addedOrNewRoute
        self.removedRoute = removedRoute
        self.neTpInclusions = neTpInclusions
        self.fullRoute = fullRoute
        self.neTpSncExclusions = neTpSncExclusions
        self.aEnd = aEnd
        self.zEnd = zEnd
        self.additionalCreationInfo = additionalCreationInfo

_0_subnetworkConnection.SNCModifyData_T = SNCModifyData_T
_0_subnetworkConnection._d_SNCModifyData_T  = (omniORB.tcInternal.tv_struct, SNCModifyData_T, SNCModifyData_T._NP_RepositoryId, "SNCModifyData_T", "userLabel", (omniORB.tcInternal.tv_string,0), "forceUniqueness", omniORB.tcInternal.tv_boolean, "owner", (omniORB.tcInternal.tv_string,0), "direction", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/ConnectionDirection_T:1.0"], "modifyType", (omniORB.tcInternal.tv_string,0), "retainOldSNC", omniORB.tcInternal.tv_boolean, "modifyServers_allowed", omniORB.tcInternal.tv_boolean, "staticProtectionLevel", omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/StaticProtectionLevel_T:1.0"], "protectionEffort", omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/ProtectionEffort_T:1.0"], "rerouteAllowed", omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/Reroute_T:1.0"], "networkRouted", omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/NetworkRouted_T:1.0"], "sncType", omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SNCType_T:1.0"], "layerRate", omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRate_T:1.0"], "addedOrNewRoute", omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/RouteList_T:1.0"], "removedRoute", omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/RouteList_T:1.0"], "neTpInclusions", omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/ResourceList_T:1.0"], "fullRoute", omniORB.tcInternal.tv_boolean, "neTpSncExclusions", omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/ResourceList_T:1.0"], "aEnd", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], "zEnd", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], "additionalCreationInfo", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"])
_0_subnetworkConnection._tc_SNCModifyData_T = omniORB.tcInternal.createTypeCode(_0_subnetworkConnection._d_SNCModifyData_T)
omniORB.registerType(SNCModifyData_T._NP_RepositoryId, _0_subnetworkConnection._d_SNCModifyData_T, _0_subnetworkConnection._tc_SNCModifyData_T)
del SNCModifyData_T

# struct WaveLengthStatus_T
_0_subnetworkConnection.WaveLengthStatus_T = omniORB.newEmptyClass()
class WaveLengthStatus_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/subnetworkConnection/WaveLengthStatus_T:1.0"

    def __init__(self, frequency, used, unused, addtionalInfo):
        self.frequency = frequency
        self.used = used
        self.unused = unused
        self.addtionalInfo = addtionalInfo

_0_subnetworkConnection.WaveLengthStatus_T = WaveLengthStatus_T
_0_subnetworkConnection._d_WaveLengthStatus_T  = (omniORB.tcInternal.tv_struct, WaveLengthStatus_T, WaveLengthStatus_T._NP_RepositoryId, "WaveLengthStatus_T", "frequency", (omniORB.tcInternal.tv_string,0), "used", omniORB.tcInternal.tv_short, "unused", omniORB.tcInternal.tv_short, "addtionalInfo", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"])
_0_subnetworkConnection._tc_WaveLengthStatus_T = omniORB.tcInternal.createTypeCode(_0_subnetworkConnection._d_WaveLengthStatus_T)
omniORB.registerType(WaveLengthStatus_T._NP_RepositoryId, _0_subnetworkConnection._d_WaveLengthStatus_T, _0_subnetworkConnection._tc_WaveLengthStatus_T)
del WaveLengthStatus_T

# typedef ... WaveLengthStatusList_T
class WaveLengthStatusList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/subnetworkConnection/WaveLengthStatusList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_subnetworkConnection.WaveLengthStatusList_T = WaveLengthStatusList_T
_0_subnetworkConnection._d_WaveLengthStatusList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/WaveLengthStatus_T:1.0"], 0)
_0_subnetworkConnection._ad_WaveLengthStatusList_T = (omniORB.tcInternal.tv_alias, WaveLengthStatusList_T._NP_RepositoryId, "WaveLengthStatusList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/WaveLengthStatus_T:1.0"], 0))
_0_subnetworkConnection._tc_WaveLengthStatusList_T = omniORB.tcInternal.createTypeCode(_0_subnetworkConnection._ad_WaveLengthStatusList_T)
omniORB.registerType(WaveLengthStatusList_T._NP_RepositoryId, _0_subnetworkConnection._ad_WaveLengthStatusList_T, _0_subnetworkConnection._tc_WaveLengthStatusList_T)
del WaveLengthStatusList_T

# interface SNCIterator_I
_0_subnetworkConnection._d_SNCIterator_I = (omniORB.tcInternal.tv_objref, "IDL:mtnm.tmforum.org/subnetworkConnection/SNCIterator_I:1.0", "SNCIterator_I")
omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SNCIterator_I:1.0"] = _0_subnetworkConnection._d_SNCIterator_I
_0_subnetworkConnection.SNCIterator_I = omniORB.newEmptyClass()
class SNCIterator_I :
    _NP_RepositoryId = _0_subnetworkConnection._d_SNCIterator_I[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_subnetworkConnection.SNCIterator_I = SNCIterator_I
_0_subnetworkConnection._tc_SNCIterator_I = omniORB.tcInternal.createTypeCode(_0_subnetworkConnection._d_SNCIterator_I)
omniORB.registerType(SNCIterator_I._NP_RepositoryId, _0_subnetworkConnection._d_SNCIterator_I, _0_subnetworkConnection._tc_SNCIterator_I)

# SNCIterator_I operations and attributes
SNCIterator_I._d_next_n = ((omniORB.tcInternal.tv_ulong, ), (omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnectionList_T:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
SNCIterator_I._d_getLength = ((), (omniORB.tcInternal.tv_ulong, ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
SNCIterator_I._d_destroy = ((), (), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})

# SNCIterator_I object reference
class _objref_SNCIterator_I (CORBA.Object):
    _NP_RepositoryId = SNCIterator_I._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def next_n(self, *args):
        return _omnipy.invoke(self, "next_n", _0_subnetworkConnection.SNCIterator_I._d_next_n, args)

    def getLength(self, *args):
        return _omnipy.invoke(self, "getLength", _0_subnetworkConnection.SNCIterator_I._d_getLength, args)

    def destroy(self, *args):
        return _omnipy.invoke(self, "destroy", _0_subnetworkConnection.SNCIterator_I._d_destroy, args)

    __methods__ = ["next_n", "getLength", "destroy"] + CORBA.Object.__methods__

omniORB.registerObjref(SNCIterator_I._NP_RepositoryId, _objref_SNCIterator_I)
_0_subnetworkConnection._objref_SNCIterator_I = _objref_SNCIterator_I
del SNCIterator_I, _objref_SNCIterator_I

# SNCIterator_I skeleton
__name__ = "subnetworkConnection__POA"
class SNCIterator_I (PortableServer.Servant):
    _NP_RepositoryId = _0_subnetworkConnection.SNCIterator_I._NP_RepositoryId


    _omni_op_d = {"next_n": _0_subnetworkConnection.SNCIterator_I._d_next_n, "getLength": _0_subnetworkConnection.SNCIterator_I._d_getLength, "destroy": _0_subnetworkConnection.SNCIterator_I._d_destroy}

SNCIterator_I._omni_skeleton = SNCIterator_I
_0_subnetworkConnection__POA.SNCIterator_I = SNCIterator_I
omniORB.registerSkeleton(SNCIterator_I._NP_RepositoryId, SNCIterator_I)
del SNCIterator_I
__name__ = "subnetworkConnection"

#
# End of module "subnetworkConnection"
#
__name__ = "subnetworkConnection_idl"

_exported_modules = ( "subnetworkConnection", )

# The end.
