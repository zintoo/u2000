# Python stubs generated by omniidl from emsSessionFactory.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "globaldefs.idl"
import globaldefs_idl
_0_globaldefs = omniORB.openModule("globaldefs")
_0_globaldefs__POA = omniORB.openModule("globaldefs__POA")
# #include "mtnmVersion.idl"
import mtnmVersion_idl
_0_mtnmVersion = omniORB.openModule("mtnmVersion")
_0_mtnmVersion__POA = omniORB.openModule("mtnmVersion__POA")
# #include "session.idl"
import session_idl
_0_session = omniORB.openModule("session")
_0_session__POA = omniORB.openModule("session__POA")
# #include "CosNotification.idl"
import CosNotification_idl
_0_CosNotification = omniORB.openModule("CosNotification")
_0_CosNotification__POA = omniORB.openModule("CosNotification__POA")
# #include "CosEventComm.idl"
import CosEventComm_idl
_0_CosEventComm = omniORB.openModule("CosEventComm")
_0_CosEventComm__POA = omniORB.openModule("CosEventComm__POA")
# #include "CosNotifyComm.idl"
import CosNotifyComm_idl
_0_CosNotifyComm = omniORB.openModule("CosNotifyComm")
_0_CosNotifyComm__POA = omniORB.openModule("CosNotifyComm__POA")
# #include "CosNotifyFilter.idl"
import CosNotifyFilter_idl
_0_CosNotifyFilter = omniORB.openModule("CosNotifyFilter")
_0_CosNotifyFilter__POA = omniORB.openModule("CosNotifyFilter__POA")
# #include "CosEventChannelAdmin.idl"
import CosEventChannelAdmin_idl
_0_CosEventChannelAdmin = omniORB.openModule("CosEventChannelAdmin")
_0_CosEventChannelAdmin__POA = omniORB.openModule("CosEventChannelAdmin__POA")
# #include "CosNotifyChannelAdmin.idl"
import CosNotifyChannelAdmin_idl
_0_CosNotifyChannelAdmin = omniORB.openModule("CosNotifyChannelAdmin")
_0_CosNotifyChannelAdmin__POA = omniORB.openModule("CosNotifyChannelAdmin__POA")
# #include "common.idl"
import common_idl
_0_common = omniORB.openModule("common")
_0_common__POA = omniORB.openModule("common__POA")
# #include "emsSession.idl"
import emsSession_idl
_0_emsSession = omniORB.openModule("emsSession")
_0_emsSession__POA = omniORB.openModule("emsSession__POA")
# #include "nmsSession.idl"
import nmsSession_idl
_0_nmsSession = omniORB.openModule("nmsSession")
_0_nmsSession__POA = omniORB.openModule("nmsSession__POA")

#
# Start of module "emsSessionFactory"
#
__name__ = "emsSessionFactory"
_0_emsSessionFactory = omniORB.openModule("emsSessionFactory", r"emsSessionFactory.idl")
_0_emsSessionFactory__POA = omniORB.openModule("emsSessionFactory__POA", r"emsSessionFactory.idl")


# interface EmsSessionFactory_I
_0_emsSessionFactory._d_EmsSessionFactory_I = (omniORB.tcInternal.tv_objref, "IDL:mtnm.tmforum.org/emsSessionFactory/EmsSessionFactory_I:1.0", "EmsSessionFactory_I")
omniORB.typeMapping["IDL:mtnm.tmforum.org/emsSessionFactory/EmsSessionFactory_I:1.0"] = _0_emsSessionFactory._d_EmsSessionFactory_I
_0_emsSessionFactory.EmsSessionFactory_I = omniORB.newEmptyClass()
class EmsSessionFactory_I (_0_mtnmVersion.Version_I):
    _NP_RepositoryId = _0_emsSessionFactory._d_EmsSessionFactory_I[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_emsSessionFactory.EmsSessionFactory_I = EmsSessionFactory_I
_0_emsSessionFactory._tc_EmsSessionFactory_I = omniORB.tcInternal.createTypeCode(_0_emsSessionFactory._d_EmsSessionFactory_I)
omniORB.registerType(EmsSessionFactory_I._NP_RepositoryId, _0_emsSessionFactory._d_EmsSessionFactory_I, _0_emsSessionFactory._tc_EmsSessionFactory_I)

# EmsSessionFactory_I operations and attributes
EmsSessionFactory_I._d_getEmsSession = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:mtnm.tmforum.org/nmsSession/NmsSession_I:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/emsSession/EmsSession_I:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})

# EmsSessionFactory_I object reference
class _objref_EmsSessionFactory_I (_0_mtnmVersion._objref_Version_I):
    _NP_RepositoryId = EmsSessionFactory_I._NP_RepositoryId

    def __init__(self):
        _0_mtnmVersion._objref_Version_I.__init__(self)

    def getEmsSession(self, *args):
        return _omnipy.invoke(self, "getEmsSession", _0_emsSessionFactory.EmsSessionFactory_I._d_getEmsSession, args)

    __methods__ = ["getEmsSession"] + _0_mtnmVersion._objref_Version_I.__methods__

omniORB.registerObjref(EmsSessionFactory_I._NP_RepositoryId, _objref_EmsSessionFactory_I)
_0_emsSessionFactory._objref_EmsSessionFactory_I = _objref_EmsSessionFactory_I
del EmsSessionFactory_I, _objref_EmsSessionFactory_I

# EmsSessionFactory_I skeleton
__name__ = "emsSessionFactory__POA"
class EmsSessionFactory_I (_0_mtnmVersion__POA.Version_I):
    _NP_RepositoryId = _0_emsSessionFactory.EmsSessionFactory_I._NP_RepositoryId


    _omni_op_d = {"getEmsSession": _0_emsSessionFactory.EmsSessionFactory_I._d_getEmsSession}
    _omni_op_d.update(_0_mtnmVersion__POA.Version_I._omni_op_d)

EmsSessionFactory_I._omni_skeleton = EmsSessionFactory_I
_0_emsSessionFactory__POA.EmsSessionFactory_I = EmsSessionFactory_I
omniORB.registerSkeleton(EmsSessionFactory_I._NP_RepositoryId, EmsSessionFactory_I)
del EmsSessionFactory_I
__name__ = "emsSessionFactory"

#
# End of module "emsSessionFactory"
#
__name__ = "emsSessionFactory_idl"

_exported_modules = ( "emsSessionFactory", )

# The end.
