# Python stubs generated by omniidl from multiLayerSubnetwork.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "globaldefs.idl"
import globaldefs_idl
_0_globaldefs = omniORB.openModule("globaldefs")
_0_globaldefs__POA = omniORB.openModule("globaldefs__POA")
# #include "transmissionParameters.idl"
import transmissionParameters_idl
_0_transmissionParameters = omniORB.openModule("transmissionParameters")
_0_transmissionParameters__POA = omniORB.openModule("transmissionParameters__POA")
# #include "common.idl"
import common_idl
_0_common = omniORB.openModule("common")
_0_common__POA = omniORB.openModule("common__POA")
# #include "terminationPoint.idl"
import terminationPoint_idl
_0_terminationPoint = omniORB.openModule("terminationPoint")
_0_terminationPoint__POA = omniORB.openModule("terminationPoint__POA")
# #include "subnetworkConnection.idl"
import subnetworkConnection_idl
_0_subnetworkConnection = omniORB.openModule("subnetworkConnection")
_0_subnetworkConnection__POA = omniORB.openModule("subnetworkConnection__POA")
# #include "managedElement.idl"
import managedElement_idl
_0_managedElement = omniORB.openModule("managedElement")
_0_managedElement__POA = omniORB.openModule("managedElement__POA")
# #include "topologicalLink.idl"
import topologicalLink_idl
_0_topologicalLink = omniORB.openModule("topologicalLink")
_0_topologicalLink__POA = omniORB.openModule("topologicalLink__POA")
# #include "protection.idl"
import protection_idl
_0_protection = omniORB.openModule("protection")
_0_protection__POA = omniORB.openModule("protection__POA")

#
# Start of module "multiLayerSubnetwork"
#
__name__ = "multiLayerSubnetwork"
_0_multiLayerSubnetwork = omniORB.openModule("multiLayerSubnetwork", r"multiLayerSubnetwork.idl")
_0_multiLayerSubnetwork__POA = omniORB.openModule("multiLayerSubnetwork__POA", r"multiLayerSubnetwork.idl")


# enum Topology_T
_0_multiLayerSubnetwork.TOPO_SINGLETON = omniORB.EnumItem("TOPO_SINGLETON", 0)
_0_multiLayerSubnetwork.TOPO_CHAIN = omniORB.EnumItem("TOPO_CHAIN", 1)
_0_multiLayerSubnetwork.TOPO_PSR = omniORB.EnumItem("TOPO_PSR", 2)
_0_multiLayerSubnetwork.TOPO_OPEN_PSR = omniORB.EnumItem("TOPO_OPEN_PSR", 3)
_0_multiLayerSubnetwork.TOPO_SPRING = omniORB.EnumItem("TOPO_SPRING", 4)
_0_multiLayerSubnetwork.TOPO_OPEN_SPRING = omniORB.EnumItem("TOPO_OPEN_SPRING", 5)
_0_multiLayerSubnetwork.TOPO_MESH = omniORB.EnumItem("TOPO_MESH", 6)
_0_multiLayerSubnetwork.Topology_T = omniORB.Enum("IDL:mtnm.tmforum.org/multiLayerSubnetwork/Topology_T:1.0", (_0_multiLayerSubnetwork.TOPO_SINGLETON, _0_multiLayerSubnetwork.TOPO_CHAIN, _0_multiLayerSubnetwork.TOPO_PSR, _0_multiLayerSubnetwork.TOPO_OPEN_PSR, _0_multiLayerSubnetwork.TOPO_SPRING, _0_multiLayerSubnetwork.TOPO_OPEN_SPRING, _0_multiLayerSubnetwork.TOPO_MESH,))

_0_multiLayerSubnetwork._d_Topology_T  = (omniORB.tcInternal.tv_enum, _0_multiLayerSubnetwork.Topology_T._NP_RepositoryId, "Topology_T", _0_multiLayerSubnetwork.Topology_T._items)
_0_multiLayerSubnetwork._tc_Topology_T = omniORB.tcInternal.createTypeCode(_0_multiLayerSubnetwork._d_Topology_T)
omniORB.registerType(_0_multiLayerSubnetwork.Topology_T._NP_RepositoryId, _0_multiLayerSubnetwork._d_Topology_T, _0_multiLayerSubnetwork._tc_Topology_T)

# enum EMSFreedomLevel_T
_0_multiLayerSubnetwork.EMSFL_CC_AT_SNC_LAYER = omniORB.EnumItem("EMSFL_CC_AT_SNC_LAYER", 0)
_0_multiLayerSubnetwork.EMSFL_TERMINATE_AND_MAP = omniORB.EnumItem("EMSFL_TERMINATE_AND_MAP", 1)
_0_multiLayerSubnetwork.EMSFL_HIGHER_ORDER_SNCS = omniORB.EnumItem("EMSFL_HIGHER_ORDER_SNCS", 2)
_0_multiLayerSubnetwork.EMSFL_RECONFIGURATION = omniORB.EnumItem("EMSFL_RECONFIGURATION", 3)
_0_multiLayerSubnetwork.EMSFreedomLevel_T = omniORB.Enum("IDL:mtnm.tmforum.org/multiLayerSubnetwork/EMSFreedomLevel_T:1.0", (_0_multiLayerSubnetwork.EMSFL_CC_AT_SNC_LAYER, _0_multiLayerSubnetwork.EMSFL_TERMINATE_AND_MAP, _0_multiLayerSubnetwork.EMSFL_HIGHER_ORDER_SNCS, _0_multiLayerSubnetwork.EMSFL_RECONFIGURATION,))

_0_multiLayerSubnetwork._d_EMSFreedomLevel_T  = (omniORB.tcInternal.tv_enum, _0_multiLayerSubnetwork.EMSFreedomLevel_T._NP_RepositoryId, "EMSFreedomLevel_T", _0_multiLayerSubnetwork.EMSFreedomLevel_T._items)
_0_multiLayerSubnetwork._tc_EMSFreedomLevel_T = omniORB.tcInternal.createTypeCode(_0_multiLayerSubnetwork._d_EMSFreedomLevel_T)
omniORB.registerType(_0_multiLayerSubnetwork.EMSFreedomLevel_T._NP_RepositoryId, _0_multiLayerSubnetwork._d_EMSFreedomLevel_T, _0_multiLayerSubnetwork._tc_EMSFreedomLevel_T)

# struct MultiLayerSubnetwork_T
_0_multiLayerSubnetwork.MultiLayerSubnetwork_T = omniORB.newEmptyClass()
class MultiLayerSubnetwork_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/multiLayerSubnetwork/MultiLayerSubnetwork_T:1.0"

    def __init__(self, name, userLabel, nativeEMSName, owner, subnetworkType, supportedRates, additionalInfo):
        self.name = name
        self.userLabel = userLabel
        self.nativeEMSName = nativeEMSName
        self.owner = owner
        self.subnetworkType = subnetworkType
        self.supportedRates = supportedRates
        self.additionalInfo = additionalInfo

_0_multiLayerSubnetwork.MultiLayerSubnetwork_T = MultiLayerSubnetwork_T
_0_multiLayerSubnetwork._d_MultiLayerSubnetwork_T  = (omniORB.tcInternal.tv_struct, MultiLayerSubnetwork_T, MultiLayerSubnetwork_T._NP_RepositoryId, "MultiLayerSubnetwork_T", "name", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], "userLabel", (omniORB.tcInternal.tv_string,0), "nativeEMSName", (omniORB.tcInternal.tv_string,0), "owner", (omniORB.tcInternal.tv_string,0), "subnetworkType", omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/Topology_T:1.0"], "supportedRates", omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], "additionalInfo", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"])
_0_multiLayerSubnetwork._tc_MultiLayerSubnetwork_T = omniORB.tcInternal.createTypeCode(_0_multiLayerSubnetwork._d_MultiLayerSubnetwork_T)
omniORB.registerType(MultiLayerSubnetwork_T._NP_RepositoryId, _0_multiLayerSubnetwork._d_MultiLayerSubnetwork_T, _0_multiLayerSubnetwork._tc_MultiLayerSubnetwork_T)
del MultiLayerSubnetwork_T

# typedef ... SubnetworkList_T
class SubnetworkList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/multiLayerSubnetwork/SubnetworkList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_multiLayerSubnetwork.SubnetworkList_T = SubnetworkList_T
_0_multiLayerSubnetwork._d_SubnetworkList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/MultiLayerSubnetwork_T:1.0"], 0)
_0_multiLayerSubnetwork._ad_SubnetworkList_T = (omniORB.tcInternal.tv_alias, SubnetworkList_T._NP_RepositoryId, "SubnetworkList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/MultiLayerSubnetwork_T:1.0"], 0))
_0_multiLayerSubnetwork._tc_SubnetworkList_T = omniORB.tcInternal.createTypeCode(_0_multiLayerSubnetwork._ad_SubnetworkList_T)
omniORB.registerType(SubnetworkList_T._NP_RepositoryId, _0_multiLayerSubnetwork._ad_SubnetworkList_T, _0_multiLayerSubnetwork._tc_SubnetworkList_T)
del SubnetworkList_T

# interface SubnetworkIterator_I
_0_multiLayerSubnetwork._d_SubnetworkIterator_I = (omniORB.tcInternal.tv_objref, "IDL:mtnm.tmforum.org/multiLayerSubnetwork/SubnetworkIterator_I:1.0", "SubnetworkIterator_I")
omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/SubnetworkIterator_I:1.0"] = _0_multiLayerSubnetwork._d_SubnetworkIterator_I
_0_multiLayerSubnetwork.SubnetworkIterator_I = omniORB.newEmptyClass()
class SubnetworkIterator_I :
    _NP_RepositoryId = _0_multiLayerSubnetwork._d_SubnetworkIterator_I[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_multiLayerSubnetwork.SubnetworkIterator_I = SubnetworkIterator_I
_0_multiLayerSubnetwork._tc_SubnetworkIterator_I = omniORB.tcInternal.createTypeCode(_0_multiLayerSubnetwork._d_SubnetworkIterator_I)
omniORB.registerType(SubnetworkIterator_I._NP_RepositoryId, _0_multiLayerSubnetwork._d_SubnetworkIterator_I, _0_multiLayerSubnetwork._tc_SubnetworkIterator_I)

# SubnetworkIterator_I operations and attributes
SubnetworkIterator_I._d_next_n = ((omniORB.tcInternal.tv_ulong, ), (omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/SubnetworkList_T:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
SubnetworkIterator_I._d_getLength = ((), (omniORB.tcInternal.tv_ulong, ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
SubnetworkIterator_I._d_destroy = ((), (), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})

# SubnetworkIterator_I object reference
class _objref_SubnetworkIterator_I (CORBA.Object):
    _NP_RepositoryId = SubnetworkIterator_I._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def next_n(self, *args):
        return _omnipy.invoke(self, "next_n", _0_multiLayerSubnetwork.SubnetworkIterator_I._d_next_n, args)

    def getLength(self, *args):
        return _omnipy.invoke(self, "getLength", _0_multiLayerSubnetwork.SubnetworkIterator_I._d_getLength, args)

    def destroy(self, *args):
        return _omnipy.invoke(self, "destroy", _0_multiLayerSubnetwork.SubnetworkIterator_I._d_destroy, args)

    __methods__ = ["next_n", "getLength", "destroy"] + CORBA.Object.__methods__

omniORB.registerObjref(SubnetworkIterator_I._NP_RepositoryId, _objref_SubnetworkIterator_I)
_0_multiLayerSubnetwork._objref_SubnetworkIterator_I = _objref_SubnetworkIterator_I
del SubnetworkIterator_I, _objref_SubnetworkIterator_I

# SubnetworkIterator_I skeleton
__name__ = "multiLayerSubnetwork__POA"
class SubnetworkIterator_I (PortableServer.Servant):
    _NP_RepositoryId = _0_multiLayerSubnetwork.SubnetworkIterator_I._NP_RepositoryId


    _omni_op_d = {"next_n": _0_multiLayerSubnetwork.SubnetworkIterator_I._d_next_n, "getLength": _0_multiLayerSubnetwork.SubnetworkIterator_I._d_getLength, "destroy": _0_multiLayerSubnetwork.SubnetworkIterator_I._d_destroy}

SubnetworkIterator_I._omni_skeleton = SubnetworkIterator_I
_0_multiLayerSubnetwork__POA.SubnetworkIterator_I = SubnetworkIterator_I
omniORB.registerSkeleton(SubnetworkIterator_I._NP_RepositoryId, SubnetworkIterator_I)
del SubnetworkIterator_I
__name__ = "multiLayerSubnetwork"

# interface MultiLayerSubnetworkMgr_I
_0_multiLayerSubnetwork._d_MultiLayerSubnetworkMgr_I = (omniORB.tcInternal.tv_objref, "IDL:mtnm.tmforum.org/multiLayerSubnetwork/MultiLayerSubnetworkMgr_I:1.0", "MultiLayerSubnetworkMgr_I")
omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/MultiLayerSubnetworkMgr_I:1.0"] = _0_multiLayerSubnetwork._d_MultiLayerSubnetworkMgr_I
_0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I = omniORB.newEmptyClass()
class MultiLayerSubnetworkMgr_I (_0_common.Common_I):
    _NP_RepositoryId = _0_multiLayerSubnetwork._d_MultiLayerSubnetworkMgr_I[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I = MultiLayerSubnetworkMgr_I
_0_multiLayerSubnetwork._tc_MultiLayerSubnetworkMgr_I = omniORB.tcInternal.createTypeCode(_0_multiLayerSubnetwork._d_MultiLayerSubnetworkMgr_I)
omniORB.registerType(MultiLayerSubnetworkMgr_I._NP_RepositoryId, _0_multiLayerSubnetwork._d_MultiLayerSubnetworkMgr_I, _0_multiLayerSubnetwork._tc_MultiLayerSubnetworkMgr_I)

# MultiLayerSubnetworkMgr_I operations and attributes
MultiLayerSubnetworkMgr_I._d_getAllManagedElements = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/managedElement/ManagedElementList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/managedElement/ManagedElementIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllManagedElementNames = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getMultiLayerSubnetwork = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/MultiLayerSubnetwork_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllTopologicalLinks = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/topologicalLink/TopologicalLinkList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/topologicalLink/TopologicalLinkIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllTopologicalLinkNames = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllInternalTopologicalLinks = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/topologicalLink/TopologicalLinkList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/topologicalLink/TopologicalLinkIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllInternalTopologicalLinkNames = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getTopologicalLink = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/topologicalLink/TopologicalLink_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllEdgePoints = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllEdgePointNames = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAssociatedTP = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointList_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getTPGroupingRelationships = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllSubnetworkConnections = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnectionList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SNCIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllSubnetworkConnectionNames = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllSubnetworkConnectionsWithTP = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnectionList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SNCIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllSubnetworkConnectionNamesWithTP = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getRoute = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_boolean), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/Route_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getRoutes = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.tcInternal.tv_boolean), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/RouteInfoList_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getSNC = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnection_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getSNCs = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnectionList_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getSNCsByEndObjectName = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnectionList_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getSNCsByNativeEmsName = (((omniORB.tcInternal.tv_string,0), omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnectionList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SNCIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getSNCsByUserLabel = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnectionList_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_createSNC = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SNCCreateData_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/GradesOfImpact_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/EMSFreedomLevel_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnection_T:1.0"], (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_modifySNC = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], (omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SNCModifyData_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/GradesOfImpact_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/ProtectionEffort_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/EMSFreedomLevel_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnection_T:1.0"], (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_activateSNC = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/GradesOfImpact_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/EMSFreedomLevel_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnection_T:1.0"], (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_createAndActivateSNC = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SNCCreateData_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/GradesOfImpact_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/EMSFreedomLevel_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnection_T:1.0"], (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_deactivateSNC = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/GradesOfImpact_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/EMSFreedomLevel_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnection_T:1.0"], (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_deleteSNC = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/EMSFreedomLevel_T:1.0"]), (), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_deactivateAndDeleteSNC = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/GradesOfImpact_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/EMSFreedomLevel_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SubnetworkConnection_T:1.0"], (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_checkValidSNC = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SNCCreateData_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], omniORB.tcInternal.tv_boolean), (omniORB.tcInternal.tv_boolean, ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllTPPools = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getAllTPPoolNames = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getRouteAndTopologicalLinks = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/Route_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/topologicalLink/TopologicalLinkList_T:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_setConjunctionSNC = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_boolean), (), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_swapSNC = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/multiLayerSubnetwork/EMSFreedomLevel_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/GradesOfImpact_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPDataList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/SNCState_T:1.0"], (omniORB.tcInternal.tv_string,0)), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
MultiLayerSubnetworkMgr_I._d_getWaveLengthStatusByEndObject = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/ConnectionDirection_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/WaveLengthStatusList_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})

# MultiLayerSubnetworkMgr_I object reference
class _objref_MultiLayerSubnetworkMgr_I (_0_common._objref_Common_I):
    _NP_RepositoryId = MultiLayerSubnetworkMgr_I._NP_RepositoryId

    def __init__(self):
        _0_common._objref_Common_I.__init__(self)

    def getAllManagedElements(self, *args):
        return _omnipy.invoke(self, "getAllManagedElements", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllManagedElements, args)

    def getAllManagedElementNames(self, *args):
        return _omnipy.invoke(self, "getAllManagedElementNames", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllManagedElementNames, args)

    def getMultiLayerSubnetwork(self, *args):
        return _omnipy.invoke(self, "getMultiLayerSubnetwork", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getMultiLayerSubnetwork, args)

    def getAllTopologicalLinks(self, *args):
        return _omnipy.invoke(self, "getAllTopologicalLinks", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllTopologicalLinks, args)

    def getAllTopologicalLinkNames(self, *args):
        return _omnipy.invoke(self, "getAllTopologicalLinkNames", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllTopologicalLinkNames, args)

    def getAllInternalTopologicalLinks(self, *args):
        return _omnipy.invoke(self, "getAllInternalTopologicalLinks", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllInternalTopologicalLinks, args)

    def getAllInternalTopologicalLinkNames(self, *args):
        return _omnipy.invoke(self, "getAllInternalTopologicalLinkNames", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllInternalTopologicalLinkNames, args)

    def getTopologicalLink(self, *args):
        return _omnipy.invoke(self, "getTopologicalLink", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getTopologicalLink, args)

    def getAllEdgePoints(self, *args):
        return _omnipy.invoke(self, "getAllEdgePoints", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllEdgePoints, args)

    def getAllEdgePointNames(self, *args):
        return _omnipy.invoke(self, "getAllEdgePointNames", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllEdgePointNames, args)

    def getAssociatedTP(self, *args):
        return _omnipy.invoke(self, "getAssociatedTP", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAssociatedTP, args)

    def getTPGroupingRelationships(self, *args):
        return _omnipy.invoke(self, "getTPGroupingRelationships", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getTPGroupingRelationships, args)

    def getAllSubnetworkConnections(self, *args):
        return _omnipy.invoke(self, "getAllSubnetworkConnections", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllSubnetworkConnections, args)

    def getAllSubnetworkConnectionNames(self, *args):
        return _omnipy.invoke(self, "getAllSubnetworkConnectionNames", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllSubnetworkConnectionNames, args)

    def getAllSubnetworkConnectionsWithTP(self, *args):
        return _omnipy.invoke(self, "getAllSubnetworkConnectionsWithTP", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllSubnetworkConnectionsWithTP, args)

    def getAllSubnetworkConnectionNamesWithTP(self, *args):
        return _omnipy.invoke(self, "getAllSubnetworkConnectionNamesWithTP", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllSubnetworkConnectionNamesWithTP, args)

    def getRoute(self, *args):
        return _omnipy.invoke(self, "getRoute", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getRoute, args)

    def getRoutes(self, *args):
        return _omnipy.invoke(self, "getRoutes", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getRoutes, args)

    def getSNC(self, *args):
        return _omnipy.invoke(self, "getSNC", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getSNC, args)

    def getSNCs(self, *args):
        return _omnipy.invoke(self, "getSNCs", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getSNCs, args)

    def getSNCsByEndObjectName(self, *args):
        return _omnipy.invoke(self, "getSNCsByEndObjectName", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getSNCsByEndObjectName, args)

    def getSNCsByNativeEmsName(self, *args):
        return _omnipy.invoke(self, "getSNCsByNativeEmsName", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getSNCsByNativeEmsName, args)

    def getSNCsByUserLabel(self, *args):
        return _omnipy.invoke(self, "getSNCsByUserLabel", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getSNCsByUserLabel, args)

    def createSNC(self, *args):
        return _omnipy.invoke(self, "createSNC", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_createSNC, args)

    def modifySNC(self, *args):
        return _omnipy.invoke(self, "modifySNC", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_modifySNC, args)

    def activateSNC(self, *args):
        return _omnipy.invoke(self, "activateSNC", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_activateSNC, args)

    def createAndActivateSNC(self, *args):
        return _omnipy.invoke(self, "createAndActivateSNC", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_createAndActivateSNC, args)

    def deactivateSNC(self, *args):
        return _omnipy.invoke(self, "deactivateSNC", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_deactivateSNC, args)

    def deleteSNC(self, *args):
        return _omnipy.invoke(self, "deleteSNC", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_deleteSNC, args)

    def deactivateAndDeleteSNC(self, *args):
        return _omnipy.invoke(self, "deactivateAndDeleteSNC", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_deactivateAndDeleteSNC, args)

    def checkValidSNC(self, *args):
        return _omnipy.invoke(self, "checkValidSNC", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_checkValidSNC, args)

    def getAllTPPools(self, *args):
        return _omnipy.invoke(self, "getAllTPPools", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllTPPools, args)

    def getAllTPPoolNames(self, *args):
        return _omnipy.invoke(self, "getAllTPPoolNames", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllTPPoolNames, args)

    def getRouteAndTopologicalLinks(self, *args):
        return _omnipy.invoke(self, "getRouteAndTopologicalLinks", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getRouteAndTopologicalLinks, args)

    def setConjunctionSNC(self, *args):
        return _omnipy.invoke(self, "setConjunctionSNC", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_setConjunctionSNC, args)

    def swapSNC(self, *args):
        return _omnipy.invoke(self, "swapSNC", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_swapSNC, args)

    def getWaveLengthStatusByEndObject(self, *args):
        return _omnipy.invoke(self, "getWaveLengthStatusByEndObject", _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getWaveLengthStatusByEndObject, args)

    __methods__ = ["getAllManagedElements", "getAllManagedElementNames", "getMultiLayerSubnetwork", "getAllTopologicalLinks", "getAllTopologicalLinkNames", "getAllInternalTopologicalLinks", "getAllInternalTopologicalLinkNames", "getTopologicalLink", "getAllEdgePoints", "getAllEdgePointNames", "getAssociatedTP", "getTPGroupingRelationships", "getAllSubnetworkConnections", "getAllSubnetworkConnectionNames", "getAllSubnetworkConnectionsWithTP", "getAllSubnetworkConnectionNamesWithTP", "getRoute", "getRoutes", "getSNC", "getSNCs", "getSNCsByEndObjectName", "getSNCsByNativeEmsName", "getSNCsByUserLabel", "createSNC", "modifySNC", "activateSNC", "createAndActivateSNC", "deactivateSNC", "deleteSNC", "deactivateAndDeleteSNC", "checkValidSNC", "getAllTPPools", "getAllTPPoolNames", "getRouteAndTopologicalLinks", "setConjunctionSNC", "swapSNC", "getWaveLengthStatusByEndObject"] + _0_common._objref_Common_I.__methods__

omniORB.registerObjref(MultiLayerSubnetworkMgr_I._NP_RepositoryId, _objref_MultiLayerSubnetworkMgr_I)
_0_multiLayerSubnetwork._objref_MultiLayerSubnetworkMgr_I = _objref_MultiLayerSubnetworkMgr_I
del MultiLayerSubnetworkMgr_I, _objref_MultiLayerSubnetworkMgr_I

# MultiLayerSubnetworkMgr_I skeleton
__name__ = "multiLayerSubnetwork__POA"
class MultiLayerSubnetworkMgr_I (_0_common__POA.Common_I):
    _NP_RepositoryId = _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._NP_RepositoryId


    _omni_op_d = {"getAllManagedElements": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllManagedElements, "getAllManagedElementNames": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllManagedElementNames, "getMultiLayerSubnetwork": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getMultiLayerSubnetwork, "getAllTopologicalLinks": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllTopologicalLinks, "getAllTopologicalLinkNames": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllTopologicalLinkNames, "getAllInternalTopologicalLinks": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllInternalTopologicalLinks, "getAllInternalTopologicalLinkNames": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllInternalTopologicalLinkNames, "getTopologicalLink": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getTopologicalLink, "getAllEdgePoints": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllEdgePoints, "getAllEdgePointNames": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllEdgePointNames, "getAssociatedTP": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAssociatedTP, "getTPGroupingRelationships": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getTPGroupingRelationships, "getAllSubnetworkConnections": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllSubnetworkConnections, "getAllSubnetworkConnectionNames": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllSubnetworkConnectionNames, "getAllSubnetworkConnectionsWithTP": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllSubnetworkConnectionsWithTP, "getAllSubnetworkConnectionNamesWithTP": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllSubnetworkConnectionNamesWithTP, "getRoute": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getRoute, "getRoutes": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getRoutes, "getSNC": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getSNC, "getSNCs": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getSNCs, "getSNCsByEndObjectName": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getSNCsByEndObjectName, "getSNCsByNativeEmsName": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getSNCsByNativeEmsName, "getSNCsByUserLabel": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getSNCsByUserLabel, "createSNC": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_createSNC, "modifySNC": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_modifySNC, "activateSNC": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_activateSNC, "createAndActivateSNC": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_createAndActivateSNC, "deactivateSNC": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_deactivateSNC, "deleteSNC": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_deleteSNC, "deactivateAndDeleteSNC": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_deactivateAndDeleteSNC, "checkValidSNC": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_checkValidSNC, "getAllTPPools": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllTPPools, "getAllTPPoolNames": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getAllTPPoolNames, "getRouteAndTopologicalLinks": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getRouteAndTopologicalLinks, "setConjunctionSNC": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_setConjunctionSNC, "swapSNC": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_swapSNC, "getWaveLengthStatusByEndObject": _0_multiLayerSubnetwork.MultiLayerSubnetworkMgr_I._d_getWaveLengthStatusByEndObject}
    _omni_op_d.update(_0_common__POA.Common_I._omni_op_d)

MultiLayerSubnetworkMgr_I._omni_skeleton = MultiLayerSubnetworkMgr_I
_0_multiLayerSubnetwork__POA.MultiLayerSubnetworkMgr_I = MultiLayerSubnetworkMgr_I
omniORB.registerSkeleton(MultiLayerSubnetworkMgr_I._NP_RepositoryId, MultiLayerSubnetworkMgr_I)
del MultiLayerSubnetworkMgr_I
__name__ = "multiLayerSubnetwork"

#
# End of module "multiLayerSubnetwork"
#
__name__ = "multiLayerSubnetwork_idl"

_exported_modules = ( "multiLayerSubnetwork", )

# The end.
