# Python stubs generated by omniidl from terminationPoint.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "globaldefs.idl"
import globaldefs_idl
_0_globaldefs = omniORB.openModule("globaldefs")
_0_globaldefs__POA = omniORB.openModule("globaldefs__POA")
# #include "transmissionParameters.idl"
import transmissionParameters_idl
_0_transmissionParameters = omniORB.openModule("transmissionParameters")
_0_transmissionParameters__POA = omniORB.openModule("transmissionParameters__POA")

#
# Start of module "terminationPoint"
#
__name__ = "terminationPoint"
_0_terminationPoint = omniORB.openModule("terminationPoint", r"terminationPoint.idl")
_0_terminationPoint__POA = omniORB.openModule("terminationPoint__POA", r"terminationPoint.idl")


# enum Directionality_T
_0_terminationPoint.D_NA = omniORB.EnumItem("D_NA", 0)
_0_terminationPoint.D_BIDIRECTIONAL = omniORB.EnumItem("D_BIDIRECTIONAL", 1)
_0_terminationPoint.D_SOURCE = omniORB.EnumItem("D_SOURCE", 2)
_0_terminationPoint.D_SINK = omniORB.EnumItem("D_SINK", 3)
_0_terminationPoint.Directionality_T = omniORB.Enum("IDL:mtnm.tmforum.org/terminationPoint/Directionality_T:1.0", (_0_terminationPoint.D_NA, _0_terminationPoint.D_BIDIRECTIONAL, _0_terminationPoint.D_SOURCE, _0_terminationPoint.D_SINK,))

_0_terminationPoint._d_Directionality_T  = (omniORB.tcInternal.tv_enum, _0_terminationPoint.Directionality_T._NP_RepositoryId, "Directionality_T", _0_terminationPoint.Directionality_T._items)
_0_terminationPoint._tc_Directionality_T = omniORB.tcInternal.createTypeCode(_0_terminationPoint._d_Directionality_T)
omniORB.registerType(_0_terminationPoint.Directionality_T._NP_RepositoryId, _0_terminationPoint._d_Directionality_T, _0_terminationPoint._tc_Directionality_T)

# enum TPConnectionState_T
_0_terminationPoint.TPCS_NA = omniORB.EnumItem("TPCS_NA", 0)
_0_terminationPoint.TPCS_SOURCE_CONNECTED = omniORB.EnumItem("TPCS_SOURCE_CONNECTED", 1)
_0_terminationPoint.TPCS_SINK_CONNECTED = omniORB.EnumItem("TPCS_SINK_CONNECTED", 2)
_0_terminationPoint.TPCS_BI_CONNECTED = omniORB.EnumItem("TPCS_BI_CONNECTED", 3)
_0_terminationPoint.TPCS_NOT_CONNECTED = omniORB.EnumItem("TPCS_NOT_CONNECTED", 4)
_0_terminationPoint.TPConnectionState_T = omniORB.Enum("IDL:mtnm.tmforum.org/terminationPoint/TPConnectionState_T:1.0", (_0_terminationPoint.TPCS_NA, _0_terminationPoint.TPCS_SOURCE_CONNECTED, _0_terminationPoint.TPCS_SINK_CONNECTED, _0_terminationPoint.TPCS_BI_CONNECTED, _0_terminationPoint.TPCS_NOT_CONNECTED,))

_0_terminationPoint._d_TPConnectionState_T  = (omniORB.tcInternal.tv_enum, _0_terminationPoint.TPConnectionState_T._NP_RepositoryId, "TPConnectionState_T", _0_terminationPoint.TPConnectionState_T._items)
_0_terminationPoint._tc_TPConnectionState_T = omniORB.tcInternal.createTypeCode(_0_terminationPoint._d_TPConnectionState_T)
omniORB.registerType(_0_terminationPoint.TPConnectionState_T._NP_RepositoryId, _0_terminationPoint._d_TPConnectionState_T, _0_terminationPoint._tc_TPConnectionState_T)

# enum TPType_T
_0_terminationPoint.TPT_PTP = omniORB.EnumItem("TPT_PTP", 0)
_0_terminationPoint.TPT_CTP = omniORB.EnumItem("TPT_CTP", 1)
_0_terminationPoint.TPT_TPPool = omniORB.EnumItem("TPT_TPPool", 2)
_0_terminationPoint.TPType_T = omniORB.Enum("IDL:mtnm.tmforum.org/terminationPoint/TPType_T:1.0", (_0_terminationPoint.TPT_PTP, _0_terminationPoint.TPT_CTP, _0_terminationPoint.TPT_TPPool,))

_0_terminationPoint._d_TPType_T  = (omniORB.tcInternal.tv_enum, _0_terminationPoint.TPType_T._NP_RepositoryId, "TPType_T", _0_terminationPoint.TPType_T._items)
_0_terminationPoint._tc_TPType_T = omniORB.tcInternal.createTypeCode(_0_terminationPoint._d_TPType_T)
omniORB.registerType(_0_terminationPoint.TPType_T._NP_RepositoryId, _0_terminationPoint._d_TPType_T, _0_terminationPoint._tc_TPType_T)

# enum TerminationMode_T
_0_terminationPoint.TM_NA = omniORB.EnumItem("TM_NA", 0)
_0_terminationPoint.TM_NEITHER_TERMINATED_NOR_AVAILABLE_FOR_MAPPING = omniORB.EnumItem("TM_NEITHER_TERMINATED_NOR_AVAILABLE_FOR_MAPPING", 1)
_0_terminationPoint.TM_TERMINATED_AND_AVAILABLE_FOR_MAPPING = omniORB.EnumItem("TM_TERMINATED_AND_AVAILABLE_FOR_MAPPING", 2)
_0_terminationPoint.TerminationMode_T = omniORB.Enum("IDL:mtnm.tmforum.org/terminationPoint/TerminationMode_T:1.0", (_0_terminationPoint.TM_NA, _0_terminationPoint.TM_NEITHER_TERMINATED_NOR_AVAILABLE_FOR_MAPPING, _0_terminationPoint.TM_TERMINATED_AND_AVAILABLE_FOR_MAPPING,))

_0_terminationPoint._d_TerminationMode_T  = (omniORB.tcInternal.tv_enum, _0_terminationPoint.TerminationMode_T._NP_RepositoryId, "TerminationMode_T", _0_terminationPoint.TerminationMode_T._items)
_0_terminationPoint._tc_TerminationMode_T = omniORB.tcInternal.createTypeCode(_0_terminationPoint._d_TerminationMode_T)
omniORB.registerType(_0_terminationPoint.TerminationMode_T._NP_RepositoryId, _0_terminationPoint._d_TerminationMode_T, _0_terminationPoint._tc_TerminationMode_T)

# enum TPProtectionAssociation_T
_0_terminationPoint.TPPA_NA = omniORB.EnumItem("TPPA_NA", 0)
_0_terminationPoint.TPPA_PSR_RELATED = omniORB.EnumItem("TPPA_PSR_RELATED", 1)
_0_terminationPoint.TPProtectionAssociation_T = omniORB.Enum("IDL:mtnm.tmforum.org/terminationPoint/TPProtectionAssociation_T:1.0", (_0_terminationPoint.TPPA_NA, _0_terminationPoint.TPPA_PSR_RELATED,))

_0_terminationPoint._d_TPProtectionAssociation_T  = (omniORB.tcInternal.tv_enum, _0_terminationPoint.TPProtectionAssociation_T._NP_RepositoryId, "TPProtectionAssociation_T", _0_terminationPoint.TPProtectionAssociation_T._items)
_0_terminationPoint._tc_TPProtectionAssociation_T = omniORB.tcInternal.createTypeCode(_0_terminationPoint._d_TPProtectionAssociation_T)
omniORB.registerType(_0_terminationPoint.TPProtectionAssociation_T._NP_RepositoryId, _0_terminationPoint._d_TPProtectionAssociation_T, _0_terminationPoint._tc_TPProtectionAssociation_T)

# struct TerminationPoint_T
_0_terminationPoint.TerminationPoint_T = omniORB.newEmptyClass()
class TerminationPoint_T (omniORB.StructBase):
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/terminationPoint/TerminationPoint_T:1.0"

    def __init__(self, name, userLabel, nativeEMSName, owner, ingressTrafficDescriptorName, egressTrafficDescriptorName, type, connectionState, tpMappingMode, direction, transmissionParams, tpProtectionAssociation, edgePoint, additionalInfo):
        self.name = name
        self.userLabel = userLabel
        self.nativeEMSName = nativeEMSName
        self.owner = owner
        self.ingressTrafficDescriptorName = ingressTrafficDescriptorName
        self.egressTrafficDescriptorName = egressTrafficDescriptorName
        self.type = type
        self.connectionState = connectionState
        self.tpMappingMode = tpMappingMode
        self.direction = direction
        self.transmissionParams = transmissionParams
        self.tpProtectionAssociation = tpProtectionAssociation
        self.edgePoint = edgePoint
        self.additionalInfo = additionalInfo

_0_terminationPoint.TerminationPoint_T = TerminationPoint_T
_0_terminationPoint._d_TerminationPoint_T  = (omniORB.tcInternal.tv_struct, TerminationPoint_T, TerminationPoint_T._NP_RepositoryId, "TerminationPoint_T", "name", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], "userLabel", (omniORB.tcInternal.tv_string,0), "nativeEMSName", (omniORB.tcInternal.tv_string,0), "owner", (omniORB.tcInternal.tv_string,0), "ingressTrafficDescriptorName", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], "egressTrafficDescriptorName", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], "type", omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TPType_T:1.0"], "connectionState", omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TPConnectionState_T:1.0"], "tpMappingMode", omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationMode_T:1.0"], "direction", omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/Directionality_T:1.0"], "transmissionParams", omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayeredParameterList_T:1.0"], "tpProtectionAssociation", omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TPProtectionAssociation_T:1.0"], "edgePoint", omniORB.tcInternal.tv_boolean, "additionalInfo", omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NVSList_T:1.0"])
_0_terminationPoint._tc_TerminationPoint_T = omniORB.tcInternal.createTypeCode(_0_terminationPoint._d_TerminationPoint_T)
omniORB.registerType(TerminationPoint_T._NP_RepositoryId, _0_terminationPoint._d_TerminationPoint_T, _0_terminationPoint._tc_TerminationPoint_T)
del TerminationPoint_T

# typedef ... TerminationPointList_T
class TerminationPointList_T:
    _NP_RepositoryId = "IDL:mtnm.tmforum.org/terminationPoint/TerminationPointList_T:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_terminationPoint.TerminationPointList_T = TerminationPointList_T
_0_terminationPoint._d_TerminationPointList_T  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPoint_T:1.0"], 0)
_0_terminationPoint._ad_TerminationPointList_T = (omniORB.tcInternal.tv_alias, TerminationPointList_T._NP_RepositoryId, "TerminationPointList_T", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPoint_T:1.0"], 0))
_0_terminationPoint._tc_TerminationPointList_T = omniORB.tcInternal.createTypeCode(_0_terminationPoint._ad_TerminationPointList_T)
omniORB.registerType(TerminationPointList_T._NP_RepositoryId, _0_terminationPoint._ad_TerminationPointList_T, _0_terminationPoint._tc_TerminationPointList_T)
del TerminationPointList_T

# interface TerminationPointIterator_I
_0_terminationPoint._d_TerminationPointIterator_I = (omniORB.tcInternal.tv_objref, "IDL:mtnm.tmforum.org/terminationPoint/TerminationPointIterator_I:1.0", "TerminationPointIterator_I")
omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointIterator_I:1.0"] = _0_terminationPoint._d_TerminationPointIterator_I
_0_terminationPoint.TerminationPointIterator_I = omniORB.newEmptyClass()
class TerminationPointIterator_I :
    _NP_RepositoryId = _0_terminationPoint._d_TerminationPointIterator_I[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_terminationPoint.TerminationPointIterator_I = TerminationPointIterator_I
_0_terminationPoint._tc_TerminationPointIterator_I = omniORB.tcInternal.createTypeCode(_0_terminationPoint._d_TerminationPointIterator_I)
omniORB.registerType(TerminationPointIterator_I._NP_RepositoryId, _0_terminationPoint._d_TerminationPointIterator_I, _0_terminationPoint._tc_TerminationPointIterator_I)

# TerminationPointIterator_I operations and attributes
TerminationPointIterator_I._d_next_n = ((omniORB.tcInternal.tv_ulong, ), (omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointList_T:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
TerminationPointIterator_I._d_getLength = ((), (omniORB.tcInternal.tv_ulong, ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
TerminationPointIterator_I._d_destroy = ((), (), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})

# TerminationPointIterator_I object reference
class _objref_TerminationPointIterator_I (CORBA.Object):
    _NP_RepositoryId = TerminationPointIterator_I._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def next_n(self, *args):
        return _omnipy.invoke(self, "next_n", _0_terminationPoint.TerminationPointIterator_I._d_next_n, args)

    def getLength(self, *args):
        return _omnipy.invoke(self, "getLength", _0_terminationPoint.TerminationPointIterator_I._d_getLength, args)

    def destroy(self, *args):
        return _omnipy.invoke(self, "destroy", _0_terminationPoint.TerminationPointIterator_I._d_destroy, args)

    __methods__ = ["next_n", "getLength", "destroy"] + CORBA.Object.__methods__

omniORB.registerObjref(TerminationPointIterator_I._NP_RepositoryId, _objref_TerminationPointIterator_I)
_0_terminationPoint._objref_TerminationPointIterator_I = _objref_TerminationPointIterator_I
del TerminationPointIterator_I, _objref_TerminationPointIterator_I

# TerminationPointIterator_I skeleton
__name__ = "terminationPoint__POA"
class TerminationPointIterator_I (PortableServer.Servant):
    _NP_RepositoryId = _0_terminationPoint.TerminationPointIterator_I._NP_RepositoryId


    _omni_op_d = {"next_n": _0_terminationPoint.TerminationPointIterator_I._d_next_n, "getLength": _0_terminationPoint.TerminationPointIterator_I._d_getLength, "destroy": _0_terminationPoint.TerminationPointIterator_I._d_destroy}

TerminationPointIterator_I._omni_skeleton = TerminationPointIterator_I
_0_terminationPoint__POA.TerminationPointIterator_I = TerminationPointIterator_I
omniORB.registerSkeleton(TerminationPointIterator_I._NP_RepositoryId, TerminationPointIterator_I)
del TerminationPointIterator_I
__name__ = "terminationPoint"

#
# End of module "terminationPoint"
#
__name__ = "terminationPoint_idl"

_exported_modules = ( "terminationPoint", )

# The end.
