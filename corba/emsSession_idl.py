# Python stubs generated by omniidl from emsSession.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "CosNotification.idl"
import CosNotification_idl
_0_CosNotification = omniORB.openModule("CosNotification")
_0_CosNotification__POA = omniORB.openModule("CosNotification__POA")
# #include "CosEventComm.idl"
import CosEventComm_idl
_0_CosEventComm = omniORB.openModule("CosEventComm")
_0_CosEventComm__POA = omniORB.openModule("CosEventComm__POA")
# #include "CosNotifyComm.idl"
import CosNotifyComm_idl
_0_CosNotifyComm = omniORB.openModule("CosNotifyComm")
_0_CosNotifyComm__POA = omniORB.openModule("CosNotifyComm__POA")
# #include "CosNotifyFilter.idl"
import CosNotifyFilter_idl
_0_CosNotifyFilter = omniORB.openModule("CosNotifyFilter")
_0_CosNotifyFilter__POA = omniORB.openModule("CosNotifyFilter__POA")
# #include "CosEventChannelAdmin.idl"
import CosEventChannelAdmin_idl
_0_CosEventChannelAdmin = omniORB.openModule("CosEventChannelAdmin")
_0_CosEventChannelAdmin__POA = omniORB.openModule("CosEventChannelAdmin__POA")
# #include "CosNotifyChannelAdmin.idl"
import CosNotifyChannelAdmin_idl
_0_CosNotifyChannelAdmin = omniORB.openModule("CosNotifyChannelAdmin")
_0_CosNotifyChannelAdmin__POA = omniORB.openModule("CosNotifyChannelAdmin__POA")
# #include "globaldefs.idl"
import globaldefs_idl
_0_globaldefs = omniORB.openModule("globaldefs")
_0_globaldefs__POA = omniORB.openModule("globaldefs__POA")
# #include "common.idl"
import common_idl
_0_common = omniORB.openModule("common")
_0_common__POA = omniORB.openModule("common__POA")
# #include "session.idl"
import session_idl
_0_session = omniORB.openModule("session")
_0_session__POA = omniORB.openModule("session__POA")

#
# Start of module "emsSession"
#
__name__ = "emsSession"
_0_emsSession = omniORB.openModule("emsSession", r"emsSession.idl")
_0_emsSession__POA = omniORB.openModule("emsSession__POA", r"emsSession.idl")


# interface EmsSession_I
_0_emsSession._d_EmsSession_I = (omniORB.tcInternal.tv_objref, "IDL:mtnm.tmforum.org/emsSession/EmsSession_I:1.0", "EmsSession_I")
omniORB.typeMapping["IDL:mtnm.tmforum.org/emsSession/EmsSession_I:1.0"] = _0_emsSession._d_EmsSession_I
_0_emsSession.EmsSession_I = omniORB.newEmptyClass()
class EmsSession_I (_0_session.Session_I):
    _NP_RepositoryId = _0_emsSession._d_EmsSession_I[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil

    
    # typedef ... managerNames_T
    class managerNames_T:
        _NP_RepositoryId = "IDL:mtnm.tmforum.org/emsSession/EmsSession_I/managerNames_T:1.0"
        def __init__(self, *args, **kw):
            raise RuntimeError("Cannot construct objects of this type.")
    _d_managerNames_T  = (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0)
    _ad_managerNames_T = (omniORB.tcInternal.tv_alias, managerNames_T._NP_RepositoryId, "managerNames_T", (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0))
    _tc_managerNames_T = omniORB.tcInternal.createTypeCode(_ad_managerNames_T)
    omniORB.registerType(managerNames_T._NP_RepositoryId, _ad_managerNames_T, _tc_managerNames_T)


_0_emsSession.EmsSession_I = EmsSession_I
_0_emsSession._tc_EmsSession_I = omniORB.tcInternal.createTypeCode(_0_emsSession._d_EmsSession_I)
omniORB.registerType(EmsSession_I._NP_RepositoryId, _0_emsSession._d_EmsSession_I, _0_emsSession._tc_EmsSession_I)

# EmsSession_I operations and attributes
EmsSession_I._d_getSupportedManagers = ((), (omniORB.typeMapping["IDL:mtnm.tmforum.org/emsSession/EmsSession_I/managerNames_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
EmsSession_I._d_getManager = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/common/Common_I:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
EmsSession_I._d_getEventChannel = ((), (omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/EventChannel:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})

# EmsSession_I object reference
class _objref_EmsSession_I (_0_session._objref_Session_I):
    _NP_RepositoryId = EmsSession_I._NP_RepositoryId

    def __init__(self):
        _0_session._objref_Session_I.__init__(self)

    def getSupportedManagers(self, *args):
        return _omnipy.invoke(self, "getSupportedManagers", _0_emsSession.EmsSession_I._d_getSupportedManagers, args)

    def getManager(self, *args):
        return _omnipy.invoke(self, "getManager", _0_emsSession.EmsSession_I._d_getManager, args)

    def getEventChannel(self, *args):
        return _omnipy.invoke(self, "getEventChannel", _0_emsSession.EmsSession_I._d_getEventChannel, args)

    __methods__ = ["getSupportedManagers", "getManager", "getEventChannel"] + _0_session._objref_Session_I.__methods__

omniORB.registerObjref(EmsSession_I._NP_RepositoryId, _objref_EmsSession_I)
_0_emsSession._objref_EmsSession_I = _objref_EmsSession_I
del EmsSession_I, _objref_EmsSession_I

# EmsSession_I skeleton
__name__ = "emsSession__POA"
class EmsSession_I (_0_session__POA.Session_I):
    _NP_RepositoryId = _0_emsSession.EmsSession_I._NP_RepositoryId


    _omni_op_d = {"getSupportedManagers": _0_emsSession.EmsSession_I._d_getSupportedManagers, "getManager": _0_emsSession.EmsSession_I._d_getManager, "getEventChannel": _0_emsSession.EmsSession_I._d_getEventChannel}
    _omni_op_d.update(_0_session__POA.Session_I._omni_op_d)

EmsSession_I._omni_skeleton = EmsSession_I
_0_emsSession__POA.EmsSession_I = EmsSession_I
omniORB.registerSkeleton(EmsSession_I._NP_RepositoryId, EmsSession_I)
del EmsSession_I
__name__ = "emsSession"

#
# End of module "emsSession"
#
__name__ = "emsSession_idl"

_exported_modules = ( "emsSession", )

# The end.
