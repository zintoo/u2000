# Python stubs generated by omniidl from managedElementManager.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "globaldefs.idl"
import globaldefs_idl
_0_globaldefs = omniORB.openModule("globaldefs")
_0_globaldefs__POA = omniORB.openModule("globaldefs__POA")
# #include "common.idl"
import common_idl
_0_common = omniORB.openModule("common")
_0_common__POA = omniORB.openModule("common__POA")
# #include "transmissionParameters.idl"
import transmissionParameters_idl
_0_transmissionParameters = omniORB.openModule("transmissionParameters")
_0_transmissionParameters__POA = omniORB.openModule("transmissionParameters__POA")
# #include "managedElement.idl"
import managedElement_idl
_0_managedElement = omniORB.openModule("managedElement")
_0_managedElement__POA = omniORB.openModule("managedElement__POA")
# #include "terminationPoint.idl"
import terminationPoint_idl
_0_terminationPoint = omniORB.openModule("terminationPoint")
_0_terminationPoint__POA = omniORB.openModule("terminationPoint__POA")
# #include "CosNotification.idl"
import CosNotification_idl
_0_CosNotification = omniORB.openModule("CosNotification")
_0_CosNotification__POA = omniORB.openModule("CosNotification__POA")
# #include "notifications.idl"
import notifications_idl
_0_notifications = omniORB.openModule("notifications")
_0_notifications__POA = omniORB.openModule("notifications__POA")
# #include "subnetworkConnection.idl"
import subnetworkConnection_idl
_0_subnetworkConnection = omniORB.openModule("subnetworkConnection")
_0_subnetworkConnection__POA = omniORB.openModule("subnetworkConnection__POA")

#
# Start of module "managedElementManager"
#
__name__ = "managedElementManager"
_0_managedElementManager = omniORB.openModule("managedElementManager", r"managedElementManager.idl")
_0_managedElementManager__POA = omniORB.openModule("managedElementManager__POA", r"managedElementManager.idl")


# interface ManagedElementMgr_I
_0_managedElementManager._d_ManagedElementMgr_I = (omniORB.tcInternal.tv_objref, "IDL:mtnm.tmforum.org/managedElementManager/ManagedElementMgr_I:1.0", "ManagedElementMgr_I")
omniORB.typeMapping["IDL:mtnm.tmforum.org/managedElementManager/ManagedElementMgr_I:1.0"] = _0_managedElementManager._d_ManagedElementMgr_I
_0_managedElementManager.ManagedElementMgr_I = omniORB.newEmptyClass()
class ManagedElementMgr_I (_0_common.Common_I):
    _NP_RepositoryId = _0_managedElementManager._d_ManagedElementMgr_I[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_managedElementManager.ManagedElementMgr_I = ManagedElementMgr_I
_0_managedElementManager._tc_ManagedElementMgr_I = omniORB.tcInternal.createTypeCode(_0_managedElementManager._d_ManagedElementMgr_I)
omniORB.registerType(ManagedElementMgr_I._NP_RepositoryId, _0_managedElementManager._d_ManagedElementMgr_I, _0_managedElementManager._tc_ManagedElementMgr_I)

# ManagedElementMgr_I operations and attributes
ManagedElementMgr_I._d_getAllManagedElements = ((omniORB.tcInternal.tv_ulong, ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/managedElement/ManagedElementList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/managedElement/ManagedElementIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getAllManagedElementNames = ((omniORB.tcInternal.tv_ulong, ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getContainingSubnetworkNames = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getAllPTPs = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getAllPTPNames = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getTP = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPoint_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getManagedElement = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/managedElement/ManagedElement_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getContainedPotentialTPs = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getContainedPotentialTPNames = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getContainedInUseTPs = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getContainedInUseTPNames = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getContainedCurrentTPs = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getContainedCurrentTPNames = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getContainingTPs = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPointList_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getContainingTPNames = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getAllActiveAlarms = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/notifications/ProbableCauseList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/notifications/PerceivedSeverityList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/notifications/EventList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/notifications/EventIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_setTPData = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/TPData_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/terminationPoint/TerminationPoint_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getAllCrossConnections = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/transmissionParameters/LayerRateList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/CrossConnectList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/CCIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getActiveAlarms = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/notifications/ProbableCauseList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/notifications/PerceivedSeverityList_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/notifications/EventList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/notifications/EventIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_checkActiveAlarms = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/notifications/EventList_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/notifications/EventList_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getAllAlarmsByFTP = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/notifications/ProbableCauseList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/notifications/PerceivedSeverityList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/Time_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/Time_T:1.0"]), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], ), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_getNEStaticInfo = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributes_T:1.0"], omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/globaldefs/NamingAttributesIterator_I:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_createCrossConnections = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/CrossConnectList_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/CrossConnectList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/CrossConnectList_T:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_activateCrossConnections = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/CrossConnectList_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/CrossConnectList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/CrossConnectList_T:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_deactivateCrossConnections = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/CrossConnectList_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/CrossConnectList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/CrossConnectList_T:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})
ManagedElementMgr_I._d_deleteCrossConnections = ((omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/CrossConnectList_T:1.0"], ), (omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/CrossConnectList_T:1.0"], omniORB.typeMapping["IDL:mtnm.tmforum.org/subnetworkConnection/CrossConnectList_T:1.0"]), {_0_globaldefs.ProcessingFailureException._NP_RepositoryId: _0_globaldefs._d_ProcessingFailureException})

# ManagedElementMgr_I object reference
class _objref_ManagedElementMgr_I (_0_common._objref_Common_I):
    _NP_RepositoryId = ManagedElementMgr_I._NP_RepositoryId

    def __init__(self):
        _0_common._objref_Common_I.__init__(self)

    def getAllManagedElements(self, *args):
        return _omnipy.invoke(self, "getAllManagedElements", _0_managedElementManager.ManagedElementMgr_I._d_getAllManagedElements, args)

    def getAllManagedElementNames(self, *args):
        return _omnipy.invoke(self, "getAllManagedElementNames", _0_managedElementManager.ManagedElementMgr_I._d_getAllManagedElementNames, args)

    def getContainingSubnetworkNames(self, *args):
        return _omnipy.invoke(self, "getContainingSubnetworkNames", _0_managedElementManager.ManagedElementMgr_I._d_getContainingSubnetworkNames, args)

    def getAllPTPs(self, *args):
        return _omnipy.invoke(self, "getAllPTPs", _0_managedElementManager.ManagedElementMgr_I._d_getAllPTPs, args)

    def getAllPTPNames(self, *args):
        return _omnipy.invoke(self, "getAllPTPNames", _0_managedElementManager.ManagedElementMgr_I._d_getAllPTPNames, args)

    def getTP(self, *args):
        return _omnipy.invoke(self, "getTP", _0_managedElementManager.ManagedElementMgr_I._d_getTP, args)

    def getManagedElement(self, *args):
        return _omnipy.invoke(self, "getManagedElement", _0_managedElementManager.ManagedElementMgr_I._d_getManagedElement, args)

    def getContainedPotentialTPs(self, *args):
        return _omnipy.invoke(self, "getContainedPotentialTPs", _0_managedElementManager.ManagedElementMgr_I._d_getContainedPotentialTPs, args)

    def getContainedPotentialTPNames(self, *args):
        return _omnipy.invoke(self, "getContainedPotentialTPNames", _0_managedElementManager.ManagedElementMgr_I._d_getContainedPotentialTPNames, args)

    def getContainedInUseTPs(self, *args):
        return _omnipy.invoke(self, "getContainedInUseTPs", _0_managedElementManager.ManagedElementMgr_I._d_getContainedInUseTPs, args)

    def getContainedInUseTPNames(self, *args):
        return _omnipy.invoke(self, "getContainedInUseTPNames", _0_managedElementManager.ManagedElementMgr_I._d_getContainedInUseTPNames, args)

    def getContainedCurrentTPs(self, *args):
        return _omnipy.invoke(self, "getContainedCurrentTPs", _0_managedElementManager.ManagedElementMgr_I._d_getContainedCurrentTPs, args)

    def getContainedCurrentTPNames(self, *args):
        return _omnipy.invoke(self, "getContainedCurrentTPNames", _0_managedElementManager.ManagedElementMgr_I._d_getContainedCurrentTPNames, args)

    def getContainingTPs(self, *args):
        return _omnipy.invoke(self, "getContainingTPs", _0_managedElementManager.ManagedElementMgr_I._d_getContainingTPs, args)

    def getContainingTPNames(self, *args):
        return _omnipy.invoke(self, "getContainingTPNames", _0_managedElementManager.ManagedElementMgr_I._d_getContainingTPNames, args)

    def getAllActiveAlarms(self, *args):
        return _omnipy.invoke(self, "getAllActiveAlarms", _0_managedElementManager.ManagedElementMgr_I._d_getAllActiveAlarms, args)

    def setTPData(self, *args):
        return _omnipy.invoke(self, "setTPData", _0_managedElementManager.ManagedElementMgr_I._d_setTPData, args)

    def getAllCrossConnections(self, *args):
        return _omnipy.invoke(self, "getAllCrossConnections", _0_managedElementManager.ManagedElementMgr_I._d_getAllCrossConnections, args)

    def getActiveAlarms(self, *args):
        return _omnipy.invoke(self, "getActiveAlarms", _0_managedElementManager.ManagedElementMgr_I._d_getActiveAlarms, args)

    def checkActiveAlarms(self, *args):
        return _omnipy.invoke(self, "checkActiveAlarms", _0_managedElementManager.ManagedElementMgr_I._d_checkActiveAlarms, args)

    def getAllAlarmsByFTP(self, *args):
        return _omnipy.invoke(self, "getAllAlarmsByFTP", _0_managedElementManager.ManagedElementMgr_I._d_getAllAlarmsByFTP, args)

    def getNEStaticInfo(self, *args):
        return _omnipy.invoke(self, "getNEStaticInfo", _0_managedElementManager.ManagedElementMgr_I._d_getNEStaticInfo, args)

    def createCrossConnections(self, *args):
        return _omnipy.invoke(self, "createCrossConnections", _0_managedElementManager.ManagedElementMgr_I._d_createCrossConnections, args)

    def activateCrossConnections(self, *args):
        return _omnipy.invoke(self, "activateCrossConnections", _0_managedElementManager.ManagedElementMgr_I._d_activateCrossConnections, args)

    def deactivateCrossConnections(self, *args):
        return _omnipy.invoke(self, "deactivateCrossConnections", _0_managedElementManager.ManagedElementMgr_I._d_deactivateCrossConnections, args)

    def deleteCrossConnections(self, *args):
        return _omnipy.invoke(self, "deleteCrossConnections", _0_managedElementManager.ManagedElementMgr_I._d_deleteCrossConnections, args)

    __methods__ = ["getAllManagedElements", "getAllManagedElementNames", "getContainingSubnetworkNames", "getAllPTPs", "getAllPTPNames", "getTP", "getManagedElement", "getContainedPotentialTPs", "getContainedPotentialTPNames", "getContainedInUseTPs", "getContainedInUseTPNames", "getContainedCurrentTPs", "getContainedCurrentTPNames", "getContainingTPs", "getContainingTPNames", "getAllActiveAlarms", "setTPData", "getAllCrossConnections", "getActiveAlarms", "checkActiveAlarms", "getAllAlarmsByFTP", "getNEStaticInfo", "createCrossConnections", "activateCrossConnections", "deactivateCrossConnections", "deleteCrossConnections"] + _0_common._objref_Common_I.__methods__

omniORB.registerObjref(ManagedElementMgr_I._NP_RepositoryId, _objref_ManagedElementMgr_I)
_0_managedElementManager._objref_ManagedElementMgr_I = _objref_ManagedElementMgr_I
del ManagedElementMgr_I, _objref_ManagedElementMgr_I

# ManagedElementMgr_I skeleton
__name__ = "managedElementManager__POA"
class ManagedElementMgr_I (_0_common__POA.Common_I):
    _NP_RepositoryId = _0_managedElementManager.ManagedElementMgr_I._NP_RepositoryId


    _omni_op_d = {"getAllManagedElements": _0_managedElementManager.ManagedElementMgr_I._d_getAllManagedElements, "getAllManagedElementNames": _0_managedElementManager.ManagedElementMgr_I._d_getAllManagedElementNames, "getContainingSubnetworkNames": _0_managedElementManager.ManagedElementMgr_I._d_getContainingSubnetworkNames, "getAllPTPs": _0_managedElementManager.ManagedElementMgr_I._d_getAllPTPs, "getAllPTPNames": _0_managedElementManager.ManagedElementMgr_I._d_getAllPTPNames, "getTP": _0_managedElementManager.ManagedElementMgr_I._d_getTP, "getManagedElement": _0_managedElementManager.ManagedElementMgr_I._d_getManagedElement, "getContainedPotentialTPs": _0_managedElementManager.ManagedElementMgr_I._d_getContainedPotentialTPs, "getContainedPotentialTPNames": _0_managedElementManager.ManagedElementMgr_I._d_getContainedPotentialTPNames, "getContainedInUseTPs": _0_managedElementManager.ManagedElementMgr_I._d_getContainedInUseTPs, "getContainedInUseTPNames": _0_managedElementManager.ManagedElementMgr_I._d_getContainedInUseTPNames, "getContainedCurrentTPs": _0_managedElementManager.ManagedElementMgr_I._d_getContainedCurrentTPs, "getContainedCurrentTPNames": _0_managedElementManager.ManagedElementMgr_I._d_getContainedCurrentTPNames, "getContainingTPs": _0_managedElementManager.ManagedElementMgr_I._d_getContainingTPs, "getContainingTPNames": _0_managedElementManager.ManagedElementMgr_I._d_getContainingTPNames, "getAllActiveAlarms": _0_managedElementManager.ManagedElementMgr_I._d_getAllActiveAlarms, "setTPData": _0_managedElementManager.ManagedElementMgr_I._d_setTPData, "getAllCrossConnections": _0_managedElementManager.ManagedElementMgr_I._d_getAllCrossConnections, "getActiveAlarms": _0_managedElementManager.ManagedElementMgr_I._d_getActiveAlarms, "checkActiveAlarms": _0_managedElementManager.ManagedElementMgr_I._d_checkActiveAlarms, "getAllAlarmsByFTP": _0_managedElementManager.ManagedElementMgr_I._d_getAllAlarmsByFTP, "getNEStaticInfo": _0_managedElementManager.ManagedElementMgr_I._d_getNEStaticInfo, "createCrossConnections": _0_managedElementManager.ManagedElementMgr_I._d_createCrossConnections, "activateCrossConnections": _0_managedElementManager.ManagedElementMgr_I._d_activateCrossConnections, "deactivateCrossConnections": _0_managedElementManager.ManagedElementMgr_I._d_deactivateCrossConnections, "deleteCrossConnections": _0_managedElementManager.ManagedElementMgr_I._d_deleteCrossConnections}
    _omni_op_d.update(_0_common__POA.Common_I._omni_op_d)

ManagedElementMgr_I._omni_skeleton = ManagedElementMgr_I
_0_managedElementManager__POA.ManagedElementMgr_I = ManagedElementMgr_I
omniORB.registerSkeleton(ManagedElementMgr_I._NP_RepositoryId, ManagedElementMgr_I)
del ManagedElementMgr_I
__name__ = "managedElementManager"

#
# End of module "managedElementManager"
#
__name__ = "managedElementManager_idl"

_exported_modules = ( "managedElementManager", )

# The end.
